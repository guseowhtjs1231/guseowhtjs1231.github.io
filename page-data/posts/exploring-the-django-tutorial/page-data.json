{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/exploring-the-django-tutorial","result":{"data":{"markdownRemark":{"id":"acc9f764-8193-589d-9b97-a10fb7073b8c","html":"<p>쟝고 접한지 두번째 날이다. 화이팅</p>\n<h2 id=\"먼저-장고의-설계-철학을-먼저-짚고-가자\" style=\"position:relative;\"><a href=\"#%EB%A8%BC%EC%A0%80-%EC%9E%A5%EA%B3%A0%EC%9D%98-%EC%84%A4%EA%B3%84-%EC%B2%A0%ED%95%99%EC%9D%84-%EB%A8%BC%EC%A0%80-%EC%A7%9A%EA%B3%A0-%EA%B0%80%EC%9E%90\" aria-label=\"먼저 장고의 설계 철학을 먼저 짚고 가자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>먼저 장고의 설계 철학을 먼저 짚고 가자.</h2>\n<h3 id=\"일반\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98\" aria-label=\"일반 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반</h3>\n<p>느슨한 결합 - 느슨한 결합, 탄탄한 응집 : 프레임워크의 각 계층은 정말로 서로 필요하기 전까지는 서로 “알지 못해야” 한다.</p>\n<p>적은 코드 - 틀에 박힌 코드 배제 최소한의 코드 활용 , 파이썬의 동적 기능을 최대로 활용</p>\n<p>신속한 개발 - 빠른 웹개발 추구</p>\n<p>반복하지 말 것 - 중복성은 나쁜 것 , 정규화는 좋은 것 : 최소한의 것들로 최대한의 것을 만든다.</p>\n<p>명시적인 것이 묵시적인 것보다 낫다.</p>\n<p>일관성</p>\n<h3 id=\"모델\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8\" aria-label=\"모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델</h3>\n<p>명시적인 것이 묵시적인 것보다 낫다.</p>\n<p>모든 관련 도메인 로직을 포함하라 - 모델을 이해하는 데 요구되는 모든 정보가 모델 내에 있어야 한다.</p>\n<h3 id=\"데이터베이스-api\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-api\" aria-label=\"데이터베이스 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 API</h3>\n<p>SQL 효율성</p>\n<p>간결하고 강력한 구문</p>\n<p>필요할 경우 SQL 문을 직접 장석하기 쉬워야 함.</p>\n<h3 id=\"url-설계\" style=\"position:relative;\"><a href=\"#url-%EC%84%A4%EA%B3%84\" aria-label=\"url 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URL 설계</h3>\n<p>느슨한 결합</p>\n<p>무한한 유연성</p>\n<p>모범 사례를 장려</p>\n<p>명확한 URL</p>\n<h3 id=\"템플릿-시스템\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"템플릿 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 시스템</h3>\n<p>표현과 로직을 분리</p>\n<p>중복을 배제</p>\n<p>HTML과의 분리</p>\n<p>XML을 템플릿 언어로 사용하지 말 것</p>\n<p>디자이너가 코딩 능력이 있는 것으로 가정</p>\n<p>공백에 특별한 의미를 부여하지 말 것</p>\n<p>프로그래밍 언어를 발명하지 말 것</p>\n<p>안전과 보안</p>\n<p>확장성</p>\n<h3 id=\"뷰\" style=\"position:relative;\"><a href=\"#%EB%B7%B0\" aria-label=\"뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰</h3>\n<p>단순성</p>\n<p>요청 객체의 사용</p>\n<p>느슨한 결합</p>\n<p>GET 과 POST를 구분</p>\n<h3 id=\"캐시-프레임워크\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%9C-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC\" aria-label=\"캐시 프레임워크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐시 프레임워크</h3>\n<p>적은 코드 </p>\n<p>일관성</p>\n<p>확장성</p>\n<h2 id=\"database-setup\" style=\"position:relative;\"><a href=\"#database-setup\" aria-label=\"database setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Database setup</h2>\n<p>mysite/settings.py를 열고 쟝고 세팅을 해볼 수 있다.</p>\n<p>기본적으로 SQLite를 데이터베이스로 쓰는데 확장가능한 데이터베이스(PostgreSQL같은)것을 쓰고 싶다면 바꿀 수 있다.\nDATABASES ‘default’에서 ENGIN을 바꾸고 NAME도 바꾸면 된다. 원하는 걸로.</p>\n<p>예로,</p>\n<p>django.db.backends.sqlite3</p>\n<p>django.db.backends.postgresql</p>\n<p>django.db.backends.mysql</p>\n<p>django.db.backends.oracle</p>\n<p>등등</p>\n<p>name - 나의 데이터베이스 이름. 절대경로로 할때 취급 될 이름. 기본값은 </p>\n<p>os.path.join(BASE_DIR, ‘db.sqlite3’) 이다.</p>\n<p>SQLite안쓰고 다른 데이터베이스를 쓰려면 일단 처음부터 고치고 가야하는데</p>\n<p>CREATE DATABASE database_name; 치고 하면 된다. 나는 기본값으로 쓸 것이기 때문에 패스한다.</p>\n<p>mysite/settings.py 에서 TIME_ZONE을 내가 지금 있는 타임존으로 설정해야한다.</p>\n<p>mysite/settings.py에서 INSTALLED_APPS의 기본값 의미.</p>\n<p>django.contrib.admin – The admin site. You’ll use it shortly.\ndjango.contrib.auth – An authentication system.\ndjango.contrib.contenttypes – A framework for content types.\ndjango.contrib.sessions – A session framework.\ndjango.contrib.messages – A messaging framework.\ndjango.contrib.staticfiles – A framework for managing static files.\n최소 하나의 데이터베이스 테이블을 응용프로그램들이 쓸 것이기 때문에 테이블을 작성해야한다. 그러기 전에 쳐야할 명령어</p>\n<p>$ python manage.py migrate</p>\n<p>이주 시키는 명령같은데.</p>\n<p>migrate 명령어는 setting.py안에 INSTALLED_APPS 세팅을 확인하고 데이터베이스 세팅되어 있는 것에 따라 필요한 데이터베이스 테이블을 만든다.  </p>\n<p>python manage.py migrate 실행 결과\n각 이주들이 어플라이 되었다고 나온다.</p>\n<p>The migrate command will only run migrations for apps in INSTALLED_APPS.</p>\n<p>: migrate 명령어는 오직 INSTALLED_APPS의 앱들을 이주하기 위해 사용된다.</p>\n<p>두가지의 모델 (질문 과 선택)을 만들어야 되는데 질문은 공식 날짜를 가지고 있고 선택은 두가지의 필드를 가지고 있다. 하나는 글자로된 선택지이고 하나는 투표집계이다. 각 선택은 질문과 연관되어 있다.</p>\n<p>이러한 개념은 파이썬으로 표현되는데  polls/models.py을 편집해보자.</p>\n<p>polls/models.py</p>\n<p>class Question(models.Model):\nquestion<em>text = models.CharField(max</em>length=200)\npub_date = models.DateTimeField(‘date published’)</p>\n<p>class Choice(models.Model):\nquestion = models.ForeignKey(Question, on<em>delete=models.CASCADE)\nchoice</em>text = models.Charfield(max_length=200)\nvotes = models.IntergerField(default=0)</p>\n<p>이러한 각 모델들은 클래스로 인해 표현되는데 django.db.models.Model 의 subclasses이다. 각 모델은 클래스변수의 숫자를 가지는데 각 모델의 데이터베이스 필드를 나타낸다.</p>\n<p>데이터베이스의 각 필드는 클래스의 인스턴스로 표현된다. </p>\n<p>CharField 는 문자(Character)필드를, DateTimeField는 날짜와 시간(datetime)필드를 표현함. 이것은 각 필드가 어떤 자료형을 가질 수 있는지를 Django에게 말한다.</p>\n<p>각자의 Field 인스턴스의 이름(question<em>text or pub</em>date)은 기계가 읽기 좋은 형식(machine-friendly format)의 데이터베이스 필드 이름이다. 이 필드명은 파이썬 코드에서 사용할 수 있으며 데이터베이스는 컬럼명으로 사용할 것이다.</p>\n<p>Field클래스의 생성자에 선택적인 첫번째 위치 인수를 전다랗여 사람이 읽기 좋은(human-readable)이름을 지정할 수도 있다.</p>\n<p>기계가 읽기 좋은 형태의 이름이라도 사람이 읽기에는 충분하다.</p>\n<p>몇몇 Field클래스들은 필수 인수가 필요하다. 예를 들어 Charfield의 경우 max_length를 입력해주어야 한다.  그리고 Field는 다양한 선택적 인수들을 가질 수 있다. 여기 예제에서는 default로 하여금 votes의 기본값을 0으로 선택하였다. </p>\n<p>그리고 ForeignKey를 사용한 관계설정이 있는데, 각각의 Choice가 하나의 Question에 관계된다는 것을 Django에 알려줌. Django는 다-대-일(many-to-one), 다대다(many-to-many), 일대일(One-to-one)과 같은 모든 일반 데이터베이스의 관계를 지원함.</p>\n<h2 id=\"모델의-활성화\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8%EC%9D%98-%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"모델의 활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델의 활성화</h2>\n<p>모델에 대한 이 소량의 코드(아까적은 파이썬)가 , Django에게 상당한 양의 정보를 전달함.</p>\n<p>Django가 그 정보를 받아 하는 일</p>\n<ul>\n<li>이 앱을 위한 데이터베이스 스키마 생성(Create table문)</li>\n<li>Question과 Choice 객체에 접근하기 위한 Python 데이터베이스 접근 API를 생성</li>\n</ul>\n<p>그러나 지금 가장 먼저 해야할 일은 프로젝트에게 Polls앱이 설치되어 있다는 것을 알려야 함.</p>\n<p>장고의 앱들은 분리되어 있어서 꼈다 뺐다를 할 수 있다. </p>\n<p>앱을 현재의 프로젝트에 포함시키기 위해서는 mysite/settings.py 파일 속에 installed_app에 </p>\n<p>‘polls.apps.PollsConfig’를 추가 해야 한다.</p>\n<p>이렇게 하면 Django가 polls앱이 포함 된 것을 알게 된다. </p>\n<p>$python manage.py makemigrations polls\nmakemigrations를 실행시킴으로써, 우리가 모델을 새로만든 사실과 이 사실을 migration에 저장시키고 싶다는 것을 django에게 알린 것이다. </p>\n<p>마이그레이션(Migration)은  모델 및 데이터베이스의 스키마에 대한 변경사항을 저장하는 방법이다. 원한다면 새로운 모델 마이그레이션을 읽을 수 있다.</p>\n<p>migrate : 우리를 위해 migration들을 실행시켜주고 자동으로 데이터베이스 스키마를 관리해주는 명령어</p>\n<p>sqlmigrate : migration이름을 인수로 받아 실행하는 SQL 문장을 보여줌.</p>\n<p>$ python manage.py sqlmigrate polls 0001</p>\n<p>python manage.py sqlmigrate polls 0001의 결과화면\n지금 껏 알아본 모델 변경을 만드는데 세단계 지침은 다음과 같다.</p>\n<p>(  models.py에서) 모델을 변경한다.\nPython manage.py makemigrations 를 통해 이 변경사항에 대한 마이그레이션을 만든다.\npython manage.py migrate명령을 통해 변경사항을 데이터베이스에 적용한다.\nAPI 가지고 놀기</p>\n<p>$python manage.py shell</p>\n<p>DJANGO<em>SETTINGS</em>MODULE환경변수 때문에 python이라고 치지 않고 위의 명령대로 실행했다. 이렇게 입장을 하고 이것저것 쳐보면 Django에서 동작하는 모든 명령을 대화식 Python 쉘에서 그대로 시험 해 볼 수 있다.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>from polls.models import Choice, Question</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Question.objects.all()</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>QuerySet []</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>from django.utils import timezone</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>q = Question(question<em>text=“What’s new?”, pub</em>date=timezone.now())</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>q.save()</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>q.id</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>1</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>q.question_text</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>“What’s new?”</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>q.pub_date</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>datetime.datetime(2020, 5, 1, 2, 46, 51, 523795, tzinfo=)</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>q.question_text = “What’s up?”\nq.save()\nQuestion.objects.all()</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>&#x3C;QuerySet [Question: Question object(1)]></p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>exit()</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>&#x3C;QuerySet [Question: Question object(1)]>은 이 객체를 표현하는 데 별로 도움이 되지 않는다. (polls/models.py파일의)Question모델을 수정하여, <strong>str</strong>()메소드를 Question과 Choice에 추가하면 도움이 된다.</p>\n<p>polls/models.py</p>\n<p>from django.db import models</p>\n<p>class Question(models.Model):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  def __str__(self):\n\n        return self.question_text</code></pre></div>\n<p>class Choice(models.Model):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  def __str__(self):\n\n        return self.choice_text</code></pre></div>\n<p>우리의 모델에 <strong>str</strong>()메소드를 추가하는 것은 객체의 표현을 대화식 프롬프트에서 편하게 보려는 이유 말고도, Django가 자동으로 생성하는 관리 사이트에서도 객체의 표현이 사용되기 때문이다.</p>\n<p>또 모델에 커스텀 메소드를 하나 추가해본다.</p>\n<p>polls/models.py</p>\n<p>import datetime</p>\n<p>from django.db import models</p>\n<p>from django.utils import timezone</p>\n<p>class Question(models.Model):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  def was_published_recently(self):\n\n        return self.pub_date &gt;= timezone.now() - datetime.timedelta(days=1)</code></pre></div>\n<p>import datetime은 Python 의 표준 모듈인 datetime모듈을 참조하기 위해</p>\n<p>from django.utils import timezone은 Django의 시간대 관련 유틸리티인 django.utils.timezone을 참조하기 위해 추가 한 것이다.</p>\n<p>다시 </p>\n<p>$python manage.py shell</p>\n<p>을 하고 API에서 놀아보자</p>\n<p>API에서 이것저것 실험</p>\n<h2 id=\"관리자-생성하기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"관리자 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리자 생성하기</h2>\n<p>$python manage.py createsuperuser</p>\n<p>이렇게 하면</p>\n<p>username과 Email address와 Password를 2번 묻는다. 다 입력을 하면 슈퍼유저 계정이 생긴다.</p>\n<h2 id=\"개발-서버-시작\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84-%EC%8B%9C%EC%9E%91\" aria-label=\"개발 서버 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 서버 시작</h2>\n<p>$python manage.py runserver</p>\n<p>한 다음 </p>\n<p><a href=\"http://127.0.0.1:8000/admin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://127.0.0.1:8000/admin/</a></p>\n<p> 으로 접근하면 유저네임과 비밀번호를 입력하라고 한다.</p>\n<h2 id=\"관리자-사이트에-들어가기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%82%AC%EC%9D%B4%ED%8A%B8%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0\" aria-label=\"관리자 사이트에 들어가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리자 사이트에 들어가기</h2>\n<p>앞에서 생성한 슈퍼유저계정으로 로그인을 하면 Django관리 인덱스 페이지가 보인다.</p>\n<p>편집 가능한 그룹과 사용자와 같은 몇 종류의 컨텐츠를 볼 수 있다. 이것들은 django.contrib.auth 모듈에서 제공되는데 , Django에서 제공되는 인증 프레임 워크이다.</p>\n<p>관리사이트에서 poll app을 변경가능하도록 만들기</p>\n<p>polls/admin.py</p>\n<p>from django.contrib import admin</p>\n<p>from .models import Question</p>\n<p>admin.site.register(Question)</p>\n<p>이제 polls Questions가 생겼다. 들어가보면 수정도 가능하고 히스토리도 볼 수 있다.!!</p>\n<p>이로써 튜토리얼 2장이 끝났다. </p>\n<figure>\n\t<blockquote>\n\t\t<p>\n\t\t \t특별한 것이 넘쳐나는 곳에선 특별하지 않는 것이 특별한 것이다.\n\t\t</p>\n\t\t<footer>\n\t\t\t<cite>Youngbin Ha</cite>\n\t\t</footer>\n\t</blockquote>\n</figure>","fields":{"slug":"/posts/exploring-the-django-tutorial","tagSlugs":["/tag/open-source/","/tag/gatsby/","/tag/typography/"]},"frontmatter":{"date":"2020-05-01T15:30:03.284Z","description":"웹서비스를 만들기 쉽게 도와주는 우리의 장고!! 친숙해지자","tags":["Open source","Gatsby","Typography"],"title":"TIL-쟝고 튜토리얼 탐험기02(Explore Django tutorial02)-장고 설계 철학,  Polls.app 만들기","socialImage":null}}},"pageContext":{"slug":"/posts/exploring-the-django-tutorial"}}}