{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/s-e-l-e-n-i-u-m","result":{"data":{"markdownRemark":{"id":"573ae4e0-666f-5225-b63b-eaa7301530e0","html":"<p>참고 사이트 : <a href=\"https://www.guru99.com/introduction-to-selenium.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.guru99.com/introduction-to-selenium.html</a></p>\n<h3 id=\"셀레니움은-무엇일까\" style=\"position:relative;\"><a href=\"#%EC%85%80%EB%A0%88%EB%8B%88%EC%9B%80%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C\" aria-label=\"셀레니움은 무엇일까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>셀레니움은 무엇일까?</h3>\n<p>: 셀레니움(Selenium)은 다양한 브라우저와 플랫폼에서 웹 응용프로그램의 유효성을 체크하는 무료 오픈소스인 자동 테스트 프레임 워크이다. Java, C#, Python 등과 같은 여러 프로그래밍 언어를 사용하여 Selenium 테스트 스크립트를 작성할 수 있다.</p>\n<p>셀레니움 발전도</p>\n<h3 id=\"사전-준비-사항\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A0%84-%EC%A4%80%EB%B9%84-%EC%82%AC%ED%95%AD\" aria-label=\"사전 준비 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전 준비 사항</h3>\n<ul>\n<li>웹드라이버 설치 (브라우저를 제어하기 위해) : <a href=\"https://sites.google.com/a/chromium.org/chromedriver/downloads\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sites.google.com/a/chromium.org/chromedriver/downloads</a> (크롬유저)</li>\n<li>셀레니움(Selenium) 설치 :</li>\n</ul>\n<p>’ pip install selenium ’  or ’ conda install -c conda-forge selenium ’</p>\n<h3 id=\"selenium-시작\" style=\"position:relative;\"><a href=\"#selenium-%EC%8B%9C%EC%9E%91\" aria-label=\"selenium 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Selenium 시작</h3>\n<p>python py파일 만들지 않고 그냥 바로 python 쳐서 실행해 봤다.</p>\n<p>일단 구글웹드라이버가 실행이 되지 않아서 애먹었다. 보안 문제 인 듯한데 알 수 없는 개발자라고 맥에서 열기를 막아서 혹시나 하는 마음에 이리저리 찾아봤다.(이상한 프로그램이고, 다운받은 홈페이지가 이상한 곳인지) </p>\n<p>크게 이상이 없어 보여 확인없이 열기를 하여서 새로운 창을 얻었다.</p>\n<p>일단 </p>\n<p><code class=\"language-text\">python</code></p>\n<p>from selenium import webdriver</p>\n<p>path = ‘드라이버 파일 위치’ User/downloads/chromedriver’  # 확장명은 빼고 입력함.</p>\n<p>driver = webdriver.Chrome(path)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">하니 이렇게 결과가 나왔다.\n\n\n\n\n\n\n\n\n구글 페이지로 가고 싶다면 \n\n```python\n\ndriver.get(&quot;https://www.google.com&quot;)\n\n#webdriver가 google 페이지에 접속하도록 명령함.</code></pre></div>\n<p>구글 창</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">driver<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#webdriver를 종료하여 창을 끈다.</span></code></pre></div>\n<p>매우 단순한 것들을 해보았다. 더 단순한 것들을 해본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">assert</span> <span class=\"token string\">\"Google\"</span> <span class=\"token keyword\">in</span> driver<span class=\"token punctuation\">.</span>title    <span class=\"token comment\">#내가 구글에 제대로 접속했는지 타이틀 체크</span>\n\nelem <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># name='q'를 찾아준다.</span>\n\nelem<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                              <span class=\"token comment\">#디폴트값을 지워주고</span>\n\nelem<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"Selenium\"</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#검색어를 입력한다.</span>\n\nelem<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                           <span class=\"token comment\">#검색을 실행한다.</span>\n\n<span class=\"token keyword\">assert</span> <span class=\"token string\">\"No results found.\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> driver<span class=\"token punctuation\">.</span>page_source    <span class=\"token comment\">#검색이 제대로 되었는지 확인한다.</span>\n\ndriver<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                             <span class=\"token comment\">#브라우저를 종료한다.</span></code></pre></div>\n<p>구글 검색창을 검사했을 때 가운데 위에서 살짝 오른쪽에 보면 name=“q”를 볼 수 있다.\nfind<em>elemeny</em>by<em>tag</em>name(‘h1’)</p>\n<p>find<em>element</em>by<em>css</em>selector(‘#css > div.selector’)</p>\n<p>find<em>elemeny</em>by<em>class</em>name(‘some<em>class</em>name’)</p>\n<p>find<em>element</em>by_xpath(‘/html/body/some/xpath’)</p>\n<p>find<em>element</em>by<em>id(‘HTML</em>id’)</p>\n<p>이렇게 by_name 외에 단일 element에 접근하는 메소드가 있다.</p>\n<p>여러 elements에 접근하는 메소드는 위의 메소드에서 elements로 바꿔주면 된다.</p>\n<p>만약 맨위의 assert 구문에 AssertionError가 뜨면 그 error가 생겼을 때의 문제도 고려하여 프로그램을 만들면 된다.</p>\n<p>elem.send_key(‘selenium’) 했을 때 화면</p>\n<p>번외로 인스타그램 회원 가입하기.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>'http<span class=\"token punctuation\">:</span>www<span class=\"token punctuation\">.</span>instagram<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>\"<span class=\"token punctuation\">)</span>\n\nelement <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span>\n\nelement<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nelement<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"ThisisID\"</span><span class=\"token punctuation\">,</span>Keys<span class=\"token punctuation\">.</span>TAB<span class=\"token punctuation\">)</span>\n\nelement <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\n\nelement<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"ThisisPASSWORD\"</span><span class=\"token punctuation\">,</span>Keys<span class=\"token punctuation\">.</span>RETURN<span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>input창이 username인 것을 검사를 통해 쉽게 알 수 있다.</p>\n<p>위의 코드로 실제로 로그인을 시도한 화면. 잘 적용 되었다.\n여기에서 Keys가 나오는데 이거는 </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>keys <span class=\"token keyword\">import</span> Keys</code></pre></div>\n<p>를 넣어주어야 가능하다. 저거를 인풋한 다음 어떤 행동을 취할지 RETURN키를 누를 것인지 TAB인지 ENTER인지 해주는 것이다. 사실 TAB을 해봐야 다시 password의 id나 name을 찾아야 되서 굳이 필요가 없었지만 RETURN키는 바로 로그인을 할 수 있게 해주어서 유용했다. 이로써 셀레니움 기초를 알아봤는데 이걸 활용하여 스타벅스 홈페이지 음료부분을 크롤링 해 볼 예정이다.</p>","fields":{"slug":"/posts/s-e-l-e-n-i-u-m","tagSlugs":["/tag/selenium/","/tag/python/","/tag/crawling/","/tag/scraping/"]},"frontmatter":{"date":"2020-05-16T22:30:37.121Z","description":"동적웹페이지를 크롤링 할 수 있게 해주는 셀레니움 ","tags":["Selenium","Python","Crawling","Scraping"],"title":"TIL - 셀레니움 (Selenium) 기초!!","socialImage":""}}},"pageContext":{"slug":"/posts/s-e-l-e-n-i-u-m"}}}