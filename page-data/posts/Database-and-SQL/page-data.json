{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Database-and-SQL","result":{"data":{"markdownRemark":{"id":"95bff7c8-08ea-5f7e-bc13-1ab5dda03b70","html":"<p>DBMS는 데이터를 저장하고 관리하는 시스템으로 개발자의 기본 소양중 하나이다.</p>\n<h2 id=\"database-기초-이해-및-설치\" style=\"position:relative;\"><a href=\"#database-%EA%B8%B0%EC%B4%88-%EC%9D%B4%ED%95%B4-%EB%B0%8F-%EC%84%A4%EC%B9%98\" aria-label=\"database 기초 이해 및 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Database 기초 이해 및 설치</h2>\n<ul>\n<li>데이터를 저장 및 보존하는 시스템</li>\n<li>Application에서는 데이터가 메모리 상에서 존재한다. 그리고 메모리에 존재하는 데이터는 보존이 되지 않는다. 그럼으로 데이터를 장기 기간동안 저장 및 보존 하기 위해서 데이터베이스를 사용한다.</li>\n<li>일반적으로 database에는 크게 관계형 데이터베이스(RDBMS)와 “NoSQL”로 명칭되는 비관계형(Non-relational) database가 있다.</li>\n</ul>\n<h2 id=\"관계형-데이터베이스rdbms-relational-database-management-system\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EA%B3%84%ED%98%95-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4rdbms-relational-database-management-system\" aria-label=\"관계형 데이터베이스rdbms relational database management system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관계형 데이터베이스(RDBMS, Relational DataBase Management System)</h2>\n<ul>\n<li>이름 그대로, 관계형 데이터 모델에 기초를 둔 데이터베이스 시스템을 말함</li>\n<li>관꼐형 데이터란 데이터를 서로 상호관련성을 가진 형태로 표현한 데이터를 말한다.</li>\n</ul>\n<p> — 모든 데이터들은 2차원 테이블(table)들로 표현 된다.</p>\n<p> — 각각의 테이블은 컬럼(column,행)과  로우(row, 열)로 구성된다.</p>\n<p> — 각 로우는 저만의 고유 키(Primary Key)가 있다. </p>\n<ul>\n<li>각각의 테이블은 서로 상호관련성을 가지고 서로 연결 될 수 있다.</li>\n</ul>\n<p>테이블 연결에는 크게 3가지 종류가 있다.</p>\n<h4 id=\"일대일one-to-one\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%8C%80%EC%9D%BCone-to-one\" aria-label=\"일대일one to one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일대일(One To One):</h4>\n<p>일대일 매칭, 다른테이블의 row가 하나씩만 연결된 것</p>\n<h4 id=\"일대다one-to-many\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%8C%80%EB%8B%A4one-to-many\" aria-label=\"일대다one to many permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일대다(One To Many):</h4>\n<p>테이블1의 로우가 테이블2의 여러 로우와 연결이 되는 관계</p>\n<h4 id=\"다대다many-to-many\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%8C%80%EB%8B%A4many-to-many\" aria-label=\"다대다many to many permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다대다(Many To Many):</h4>\n<p>테이블1의 여러 로우가 테이블2의 여러 로우와 연결이 되는 관계</p>\n<p>정보를 나누어서 저장하는 것이 효율적이다. 디스크 사용을 최소화하고 불러올 때에 효율적으로 불러와야 된다. 이러한 과정을 정규화(Normalization)이라 한다.</p>\n<h2 id=\"acidatomicity-consistency-isolation-durability\" style=\"position:relative;\"><a href=\"#acidatomicity-consistency-isolation-durability\" aria-label=\"acidatomicity consistency isolation durability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ACID(Atomicity, Consistency, Isolation, Durability)</h2>\n<p>원자성 - 트랜잭션과 관련된 작업들이 부분적으로 실행되다가 중단되지 않는 것을 보장하는 능력</p>\n<p>일관성 - 트랜잭션이 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 유지하는 것</p>\n<p>고립성 - 트랜잭션 수행 시 다른 트랜잭션의 연산 작업이 끼어들지 못하도록 보장하는 것</p>\n<p>지속성 - 성공적으로 수행된 트랜잭션은 영원히 반영되어야 한다는 것</p>\n<h2 id=\"트랜잭션transaction\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98transaction\" aria-label=\"트랜잭션transaction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜잭션(Transaction)</h2>\n<p>ACID를 제공함으로 따라서 트랜잭션(일련의 작업들을 한번에 하나의 Unit으로 실행하는것) 기능을 제공한다.</p>\n<h2 id=\"nosql-데이터베이스\" style=\"position:relative;\"><a href=\"#nosql-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4\" aria-label=\"nosql 데이터베이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoSQL 데이터베이스</h2>\n<ul>\n<li>비관계형 타입의 데이터를 저장할 때 주로 사용되는 데이터베이스 시스템</li>\n<li>관계형 데이터베이스와 다르게 비관계형 이기 때문에 데이터들을 저장하기 전에 정의 할 필요가 없다.</li>\n</ul>\n<p> — 관계형 데이터베이스는 데이터들을 저장하기 전에 어디에 어떻게 저장할 것인지 정의해야한다.</p>\n<p> --- 즉 테이블을 정의해야함( 테이블이름, 테이블과 다른 테이블의 관계, 각 컬럼의 타입)</p>\n<ul>\n<li>MongoDB, Redis, Cassandra 등이 가장 대표적인 NoSQL 데이터베이스이다.</li>\n</ul>\n<h3 id=\"sqlrdbms-vs-nosql\" style=\"position:relative;\"><a href=\"#sqlrdbms-vs-nosql\" aria-label=\"sqlrdbms vs nosql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL(RDBMS) VS NoSQL</h3>\n<h5 id=\"sql의-장점\" style=\"position:relative;\"><a href=\"#sql%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"sql의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL의 장점</h5>\n<ul>\n<li>관계형 데이터베이스는 데이터를 더 효율적으로 그리고 체계적으로 저장할 수 있고 관리할 수 있다.</li>\n<li>미리 저장하는 데이터들의 구조(테이블 스키마)를 정의 함으로 데이터의 완전성이 보장된다.</li>\n</ul>\n<h5 id=\"sql의-단점\" style=\"position:relative;\"><a href=\"#sql%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"sql의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL의 단점</h5>\n<ul>\n<li>테이블을 미리 정의해야 함으로 테이블 구조 변화 등에 덜 유연하다.</li>\n<li>확장성이 쉽지 않다.</li>\n</ul>\n<p> — 역시 테이블 구조가 미리 정의 되어 있다보니 단순히 서버를 늘리는 것 만으로 확장하기가 쉽지 않고 서버의 성능 자체도 높여야한다.</p>\n<p> — 서버를 늘려서 분산 저장 하는 것도 쉽지 않다.</p>\n<p> — Scale up(서버의 성능을 높이는 것)으로 확장성이 됨.</p>\n<ul>\n<li>정형화된 데이터들 그리고 데이터의 완전성이 중요한 데이터들을 저장하는데 유리하다.</li>\n</ul>\n<p>예) 전자상거래 정보, 은행 계좌 정보, 거래 정보 등</p>\n<h5 id=\"nosql의-장점\" style=\"position:relative;\"><a href=\"#nosql%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"nosql의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoSQL의 장점</h5>\n<ul>\n<li>데이터 구조를 미리 정의하지 않아도 됨으로 저장하는 데이터의 구조 변화에 유연하다.</li>\n<li>확장하기가 비교적 쉽다.</li>\n<li>방대한 데이터를 저장하는데 유리</li>\n</ul>\n<h6 id=\"nosql의-단점\" style=\"position:relative;\"><a href=\"#nosql%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"nosql의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoSQL의 단점</h6>\n<ul>\n<li>데이터의 완전성이 덜 보장된다.</li>\n<li>트랜잭션이 안되거나 비교적 불안정하다.</li>\n<li>비정형화 데이터 그리고 완전성이 상대적으로 덜 유리한 데이터를 저장하는데 유리하다.</li>\n</ul>\n<p>예) 로그 데이터</p>\n<h2 id=\"sql-기초\" style=\"position:relative;\"><a href=\"#sql-%EA%B8%B0%EC%B4%88\" aria-label=\"sql 기초 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 기초</h2>\n<ul>\n<li>SQL(Structured Query Language)</li>\n<li>MySQL같은 관계형 데이터베이스에서 데이터를 읽거나 생성 및 수정하기 위해 사용되는 언어.</li>\n<li>CRUD : Create, Read, Update, Delete</li>\n</ul>\n<h4 id=\"select\" style=\"position:relative;\"><a href=\"#select\" aria-label=\"select permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Select</h4>\n<p>데이터를 읽어 들일 때 사용</p>\n<p>where 구문을 사용해 검색도 가능</p>\n<p>Insert</p>\n<p>데이터를 생성할 때 사용</p>\n<h4 id=\"update\" style=\"position:relative;\"><a href=\"#update\" aria-label=\"update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update</h4>\n<p>데이터를 수정할 때 사용</p>\n<p>Delete</p>\n<p>데이터를 삭제할 때 사용</p>\n<h4 id=\"exist-not-exist\" style=\"position:relative;\"><a href=\"#exist-not-exist\" aria-label=\"exist not exist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exist, Not exist</h4>\n<p>어떠한 조건이 존재하는지 하지 않는지 확인할 때 사용하는 SQL 문.</p>\n<h4 id=\"join\" style=\"position:relative;\"><a href=\"#join\" aria-label=\"join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Join</h4>\n<p>Foreign key(외부키)로 걸려있는  2개의 table들을 join( 연결)해서 양쪽 table에서 모두 row를 읽어 들이고 싶을 때는 join문을 사용해야 함.</p>\n<p>즉 join 은 교집합이라고 생각하면 된다.</p>\n<p>Join의 유형들 이미지첨부</p>\n<h4 id=\"create-table\" style=\"position:relative;\"><a href=\"#create-table\" aria-label=\"create table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create table</h4>\n<p>테이블을 생성할 때 사용</p>\n<p>테이블 생성 예</p>","fields":{"slug":"/posts/Database-and-SQL","tagSlugs":["/tag/database/","/tag/sql/","/tag/query/","/tag/table/","/tag/modeling/"]},"frontmatter":{"date":"2020-05-14T23:46:37.121Z","description":"데이터베이스에 대해서 배운다. 무슨 말인지는 차차 이해하기러한다. ","tags":["Database","SQL","Query","Table","Modeling"],"title":"Session-데이터베이스(Database), SQL","socialImage":"/media/image-2.jpg"}}},"pageContext":{"slug":"/posts/Database-and-SQL"}}}