<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by John Ha]]></title><description><![CDATA[행복한 미래를 꿈꾸어 봅니다.]]></description><link>http://guseowhtjs1231.github.io/</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 11 May 2020 06:20:18 GMT</lastBuildDate><item><title><![CDATA[Session-자료 구조(Data Structure)란? , Array(List), Tuple]]></title><description><![CDATA[각 데이터마다 적절한 자료구조가 무엇인지 생각하자! ]]></description><link>http://guseowhtjs1231.github.io//posts/what-kind-of-data-structure-is-good-for</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/what-kind-of-data-structure-is-good-for</guid><pubDate>Mon, 11 May 2020 15:00:37 GMT</pubDate><content:encoded>&lt;p&gt;오후에 또 세션이 있네.&lt;/p&gt;
&lt;p&gt;데이터 구조란 무엇인지, 왜 중요한지, 그리고 데이터 구조의 종류 중 첫 번째로 Array와 Tuple에 대해 배워보도록 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data Structure 의 개념 필요성, 그리고 다양한 종류의 자료구조에 대한 이해&lt;/li&gt;
&lt;li&gt;Array의 개념과 장점, 단점, 그리고 언제 사용하면 좋을지&lt;/li&gt;
&lt;li&gt;Tuple의 개념과 장넘, 단점, 그리고 언제 사용하면 좋을지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5주간 배워나갈텐데 열심히 해보자~&lt;/p&gt;
&lt;h1 id=&quot;a-자료-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#a-%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;a 자료 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A. 자료 구조&lt;/h1&gt;
&lt;h3 id=&quot;1-data-structure자료-구조란&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-data-structure%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0%EB%9E%80&quot; aria-label=&quot;1 data structure자료 구조란 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Data Structure(자료 구조)란?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;자료 구조란 데이터에 편리하게 접근하고 조작하기 위한 데이터를 저장하거나 조직하는 방법&lt;/li&gt;
&lt;li&gt;자료 구조의 종류에는 여러가지가 있다. 하지만 모든 목적에 부합하는 자료구조는 없다. 따라서 각각의 자료구조가 갖는 장점과 한계를 잘 이해하고 상황에 맞게 올바른 자료 구조를 선택하고 사용하는 것이 중요&lt;/li&gt;
&lt;li&gt;자료구조는 언어별로 지원하는 양상이 다르다.&lt;/li&gt;
&lt;li&gt;각 언어가 가진 자료구조의 종류와 그것에 대한 사용 방법을 익히는 것이 중요하지만, 무엇보다 각 자료구조의 본질과 컨셉을 이해하고 상황에 맞는 적절한 자료 구조를 선택하는 것이 중요&lt;/li&gt;
&lt;li&gt;언어별로 지원하는 자료구조의 양상이 다르더라도 개념을 올바르게 이해한다면 해당 언어에 맞추어서 사용만 하면 됨.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-왜-자료-구조가-중요한가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-%EC%99%9C-%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0%EA%B0%80-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80&quot; aria-label=&quot;2 왜 자료 구조가 중요한가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 왜 자료 구조가 중요한가?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;데이터에 맞는 적절한 자료 구조를 사용하는 것은 전체 개발 시스템에 굉장히 큰 영향을 끼치기 때문&lt;/li&gt;
&lt;li&gt;“코딩은 알고리즘과 자료구조, 이 두가지로 이루어진다”*&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;리누스 토르발스*&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-자료-구조의-분류&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0%EC%9D%98-%EB%B6%84%EB%A5%98&quot; aria-label=&quot;3 자료 구조의 분류 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 자료 구조의 분류&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;단순 구조(Primitive Data Structure) : 프로그래밍에서 사용되는 기본 데이터 타입&lt;/li&gt;
&lt;li&gt;비단순 구조(None-Primitive Data Structure : 단순한 데이터를 저장하는 구조가 아니라 여러 데이터를 목적에 맞게 효과적으로 저장하는 자료 구조&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;비단순-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B9%84%EB%8B%A8%EC%88%9C-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;비단순 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;비단순 구조&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;선형 구조(Linear Data Structure) : 저장되는 자료의 전후 관계가 1:1(ex. List, Stacks, Queues)&lt;/li&gt;
&lt;li&gt;비선형 구조(Non-Linear Data Structure) : 데이터 항목 사이의 관계가 1:n 또는 n:m(ex. Graphs, Trees)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4-일반적으로-가장-자우-사용-되는-자료-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9C%BC%EB%A1%9C-%EA%B0%80%EC%9E%A5-%EC%9E%90%EC%9A%B0-%EC%82%AC%EC%9A%A9-%EB%90%98%EB%8A%94-%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;4 일반적으로 가장 자우 사용 되는 자료 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 일반적으로 가장 자우 사용 되는 자료 구조&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Array(List in Python)&lt;/li&gt;
&lt;li&gt;Tuple&lt;/li&gt;
&lt;li&gt;Set&lt;/li&gt;
&lt;li&gt;Dictionary&lt;/li&gt;
&lt;li&gt;Stack &amp;#x26; Queue&lt;/li&gt;
&lt;li&gt;Tree&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;b-자료구조---arraylist&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#b-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0---arraylist&quot; aria-label=&quot;b 자료구조   arraylist permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;B. 자료구조 - Array(list)&lt;/h1&gt;
&lt;h3 id=&quot;1-정의&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-%EC%A0%95%EC%9D%98&quot; aria-label=&quot;1 정의 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 정의&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript에서는 Array, Python 에서는 List&lt;/li&gt;
&lt;li&gt;Array(List)는 가장 기초적이고 단순하면서도 가장 자주 사용 되는 자료 구조이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-array의-특징&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-array%EC%9D%98-%ED%8A%B9%EC%A7%95&quot; aria-label=&quot;2 array의 특징 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Array의 특징&lt;/h3&gt;
&lt;p&gt;순차적으로 데이터를 저장하는 자료 구조&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Array의 가장 큰 특징은 순차적(orderd)으로 데이터를 저장한다는 점이다.&lt;/li&gt;
&lt;li&gt;자료구조에 저장하는 데이터는 일반적으로 요소(element)라고 한다.&lt;/li&gt;
&lt;li&gt;Array는 주로 서로 연결된 데이터들을 순차적으로 저장할 때 사용한다.&lt;/li&gt;
&lt;li&gt;순서가 상관 없더라도 서로 연결된 데이터들을 저장할 때 일반적으로 사용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;기타-특징&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B8%B0%ED%83%80-%ED%8A%B9%EC%A7%95&quot; aria-label=&quot;기타 특징 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;기타 특징&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;삽입 순서대로 저장됨&lt;/li&gt;
&lt;li&gt;이미 생성된 리스트도 수정 가능(Mutable)&lt;/li&gt;
&lt;li&gt;동일한 값도 여러번 삽입 가능&lt;/li&gt;
&lt;li&gt;다중차원 배열(Multi-dimentional Array): Array의 요소가 Array가 될 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-array-내부-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-array-%EB%82%B4%EB%B6%80-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;3 array 내부 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Array 내부 구조&lt;/h3&gt;
&lt;p&gt;Array는 순차적으로 데이터가 저장되기 때문에 순차적으로 번호를 지정할 수 있다. &lt;/p&gt;
&lt;h3 id=&quot;4-단점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-%EB%8B%A8%EC%A0%90&quot; aria-label=&quot;4 단점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 단점&lt;/h3&gt;
&lt;h6 id=&quot;4-1-요소-삭제-및-요소-추가-removing-or-adding-elements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-1-%EC%9A%94%EC%86%8C-%EC%82%AD%EC%A0%9C-%EB%B0%8F-%EC%9A%94%EC%86%8C-%EC%B6%94%EA%B0%80-removing-or-adding-elements&quot; aria-label=&quot;4 1 요소 삭제 및 요소 추가 removing or adding elements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4-1. 요소 삭제 및 요소 추가 (Removing or Adding Elements)&lt;/h6&gt;
&lt;p&gt;중간의 요소가 삭제 될 때나 중간에 요소가 추가가 될 때 그 뒤의 모든 요소들이 한칸 밀리거나 한칸 당겨져야 한다. 그렇기 때문에 다른 자료 구조 보다 작업시간이 좀 더 걸릴 수 있다. 그래서 정보가 자주 삭제되거나 자주 추가되는 데이터를 담기에는 Array(List)가 적절치 않다.&lt;/p&gt;
&lt;h5 id=&quot;4-2-array-재조정array-resizing&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-2-array-%EC%9E%AC%EC%A1%B0%EC%A0%95array-resizing&quot; aria-label=&quot;4 2 array 재조정array resizing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4-2. Array 재조정(Array Resizing)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;배열은 메모리가 순차적으로 채워지기 때문에 배열이 처음 생성될 때 어느 정도 메모리를 미리 할당한다.(Pre-allocation)&lt;/li&gt;
&lt;li&gt;할당된 메모리 이상으로 저장할 때에 재조정이 일어난다. 이때 순서대로 다시 할당하기 때문에 시간이 늘어난다.&lt;/li&gt;
&lt;li&gt;사이즈 예측이 안되는 데이터를 다루기에 적절치 않은 자료구조이다.&lt;/li&gt;
&lt;li&gt;대부분의 언어에서 배열의 메모리 pre-allocation과 resizing을 자동으로 실행함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;5-언제-사용하면-좋을까&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#5-%EC%96%B8%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C&quot; aria-label=&quot;5 언제 사용하면 좋을까 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. 언제 사용하면 좋을까&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;순차열적인 데이터를 저장할 때&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ex)주식 가격. 어제의 2만원가 오늘의 2만원이 다름&gt;&gt;값보다는 순서가 중요한 데이터&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다차원 데이터를 다룰 때 -&gt; Multi-dimensional Array&lt;/li&gt;
&lt;li&gt;어떠한 특정 요소를 빠르게 읽어야 할 때&lt;/li&gt;
&lt;li&gt;데이터의 사이즈가 급변하게 자주 변하지 않을 때&lt;/li&gt;
&lt;li&gt;요소가 자주 삭제되거나 추가되지 않을 때&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;c-tuple&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#c-tuple&quot; aria-label=&quot;c tuple permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C. Tuple&lt;/h1&gt;
&lt;h3 id=&quot;1-정의-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-%EC%A0%95%EC%9D%98-1&quot; aria-label=&quot;1 정의 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 정의&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List와 마찬가지로 데이터를 순차적으로 저장할 수 있는 순열 자료구조&lt;/li&gt;
&lt;li&gt;한 번 정의되고 나면 수정할 수 없음(immutable)&lt;/li&gt;
&lt;li&gt;2~3개 정도의 적은 수의 쇼규모 데이터를 저장할 때 많이 사용&lt;/li&gt;
&lt;li&gt;함수에서 리턴 값을 한 개 이상 리턴하고 싶을 때&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-장점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-%EC%9E%A5%EC%A0%90&quot; aria-label=&quot;2 장점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 장점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;간단한 값을 빨리 표현하고 싶을 때&lt;/li&gt;
&lt;li&gt;함수에서 리턴 값을 한 개 이상 리턴하고 싶을 때(ex. 좌표)&lt;/li&gt;
&lt;li&gt;Array(List)보다 가볍고 메모리를 적게 사용함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-단점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-%EB%8B%A8%EC%A0%90&quot; aria-label=&quot;3 단점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 단점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;데이터가 무슨 의미인지 명확하지 않음&lt;/li&gt;
&lt;li&gt;문맥보고 의미를 가정해야 함&lt;/li&gt;
&lt;li&gt;Named Tuple이 이런 단점을 극복하기 위해 있긴함(Python)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4-언제-사용하면-좋을까&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-%EC%96%B8%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C&quot; aria-label=&quot;4 언제 사용하면 좋을까 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 언제 사용하면 좋을까&lt;/h3&gt;
&lt;p&gt; Array(List)를 쓰기에는 간단한 데이터들을 표현할 때 사용&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Session-Foundations Kick Off]]></title><description><![CDATA[우리가 지금 어디에 있고 무엇을 하고 있는가? 백엔드란 ? ]]></description><link>http://guseowhtjs1231.github.io//posts/Foundations-kick-off</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/Foundations-kick-off</guid><pubDate>Mon, 11 May 2020 11:36:37 GMT</pubDate><content:encoded>&lt;p&gt;송은우 님&lt;/p&gt;
&lt;p&gt;우리 8기는 이제&lt;/p&gt;
&lt;p&gt;1,2주 프리코스 끝남&lt;/p&gt;
&lt;p&gt;이제 2주간 파운데이션스기간&lt;/p&gt;
&lt;p&gt;앞으로 2주 동안 파이썬 장고를 배우게 됨(프론트 제외)&lt;/p&gt;
&lt;p&gt;첫 1주 - 파이썬,장고,모델링&lt;/p&gt;
&lt;p&gt;2주 차 - 1주 프로젝트 - Westagram&lt;/p&gt;
&lt;p&gt;2명정도 짝해서 프로젝트할 예정.&lt;/p&gt;
&lt;p&gt;그다음 그룹 프로젝트를 해야 함.&lt;/p&gt;
&lt;p&gt;오늘부터 코드 카타 시작. 짝 코딩, repl.it으로 진행&lt;/p&gt;
&lt;h3 id=&quot;코드-카타의-목적&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BD%94%EB%93%9C-%EC%B9%B4%ED%83%80%EC%9D%98-%EB%AA%A9%EC%A0%81&quot; aria-label=&quot;코드 카타의 목적 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;코드 카타의 목적&lt;/h3&gt;
&lt;p&gt;정답 맞추기가 아니라 문제 해결 역량 성장에 초점&lt;/p&gt;
&lt;p&gt;짝 코딩시킬 건데 그 이유는&lt;/p&gt;
&lt;p&gt;커뮤니케이션 능력 향상&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;내가 사고한 바를 전달하는 능력&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;말을 많이 해야 함.&lt;/p&gt;
&lt;p&gt;1시간 내로 못 풀어도 일단 접어야 함. 1시간 지나면 모범 답안을 보고 정리하기.&lt;/p&gt;
&lt;h3 id=&quot;-백엔드-개발자는-뭐하는-사람일까-&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8A%94-%EB%AD%90%ED%95%98%EB%8A%94-%EC%82%AC%EB%9E%8C%EC%9D%BC%EA%B9%8C-&quot; aria-label=&quot; 백엔드 개발자는 뭐하는 사람일까  permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/// 백엔드 개발자는 뭐하는 사람일까? ///&lt;/h3&gt;
&lt;p&gt;대표적으로&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;백엔드 API system&lt;/li&gt;
&lt;li&gt;Data Pipeline system&lt;/li&gt;
&lt;li&gt;Infrastructure 및 아키텍쳐&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우리가 해야 할 고민&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동접자 증가에 따른 시스템 확장&lt;/li&gt;
&lt;li&gt;유저가 몰려서 서버 다운…&lt;/li&gt;
&lt;li&gt;Big Data 수집하고 분석 어떻게 하지?&lt;/li&gt;
&lt;li&gt;하루에 10TB 데이터 어떻게 저장함?&lt;/li&gt;
&lt;li&gt;보안, 서버 누구에게 열어놓을지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;구) ETL(Extract Transform Load) : 수집 가공 저장&lt;/p&gt;
&lt;p&gt;현) data pipeline&lt;/p&gt;
&lt;p&gt;데이터가 흘러가는 것&lt;/p&gt;
&lt;h3 id=&quot;백엔드를-빛낸-위인들&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B0%B1%EC%97%94%EB%93%9C%EB%A5%BC-%EB%B9%9B%EB%82%B8-%EC%9C%84%EC%9D%B8%EB%93%A4&quot; aria-label=&quot;백엔드를 빛낸 위인들 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;백엔드를 빛낸 위인들&lt;/h3&gt;
&lt;p&gt;리눅스, 깃 개발한 사람&lt;/p&gt;
&lt;p&gt;알파고 만든 사람(구글에서 일함) AI부서 헤더&lt;/p&gt;
&lt;p&gt;네티라는 프레임워크 만든 사람(미국에서 좀 알려진 한국 개발자-Justin) 트위터에서 일함. 한국에서 재택근무 중. 현재는 네이버 임원.&lt;/p&gt;
&lt;h3 id=&quot;잊지-말아야-할-것&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9E%8A%EC%A7%80-%EB%A7%90%EC%95%84%EC%95%BC-%ED%95%A0-%EA%B2%83&quot; aria-label=&quot;잊지 말아야 할 것 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;잊지 말아야 할 것&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;절대적인 시간 투자&lt;/li&gt;
&lt;li&gt;혼자 할 수 있어빌리티(문제 해결 능력)&lt;/li&gt;
&lt;li&gt;커뮤니티&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;한-가지-더-중요하게-생각할-것&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%9C-%EA%B0%80%EC%A7%80-%EB%8D%94-%EC%A4%91%EC%9A%94%ED%95%98%EA%B2%8C-%EC%83%9D%EA%B0%81%ED%95%A0-%EA%B2%83&quot; aria-label=&quot;한 가지 더 중요하게 생각할 것 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;한 가지 더 중요하게 생각할 것&lt;/h3&gt;
&lt;p&gt;코드 가독성(Readable Coding)&lt;/p&gt;
&lt;p&gt;보수/유지(Maintenance)&lt;/p&gt;
&lt;h4 id=&quot;그룹-프로젝트-아이디어-생각해오기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B7%B8%EB%A3%B9-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4-%EC%83%9D%EA%B0%81%ED%95%B4%EC%98%A4%EA%B8%B0&quot; aria-label=&quot;그룹 프로젝트 아이디어 생각해오기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;그룹 프로젝트 아이디어 생각해오기&lt;/h4&gt;
&lt;p&gt;1인당 1~3개정도&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;현재의 나는 과거의 내가 만든 것이다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;- John C. Maxwell&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[TIL-장고 네번째 튜토리얼(Django tutorial#4]]></title><description><![CDATA[끝날 듯 안 끝나는 장고 튜토리얼 ]]></description><link>http://guseowhtjs1231.github.io//posts/explore-django-tutorial-fourth</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/explore-django-tutorial-fourth</guid><pubDate>Fri, 08 May 2020 17:36:37 GMT</pubDate><content:encoded>&lt;p&gt;장고 이용해서 뭐 만드는거 꽤나 복잡하다~하지만 뭐 크게 문제 될 건 없다. 구조랑 왔다갔다하고 모듈이나 클래스들을 몰라서 그렇지 대충 뭐하는 건지만 알면 되지 않겠는가 ,,, 이런 긍정의 마음을 갖기 전까지 많은 고생이 있었다… 오늘도 화이팅하자 갈길 머니까&lt;/p&gt;
&lt;h4 id=&quot;finally-we-are-here-4-django-tutorial&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#finally-we-are-here-4-django-tutorial&quot; aria-label=&quot;finally we are here 4 django tutorial permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finally we are here #4 django tutorial!!&lt;/h4&gt;
&lt;h2 id=&quot;write-a-mininal-form&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#write-a-mininal-form&quot; aria-label=&quot;write a mininal form permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Write a mininal form&lt;/h2&gt;
&lt;p&gt;바로 전 튜토리얼에서 했던 template안에 detail.html을 대충 수정했었는데 이번에 제대로 받았다. &lt;/p&gt;
&lt;p&gt;polls/templates/polls/detail.html&lt;/p&gt;
&lt;!--
&lt;h1&gt;{{ question.question_text }}&lt;/h1&gt;

{% if error_message %}&lt;p&gt;&lt;strong&gt;{{ error_message }}&lt;/strong&gt;&lt;/p&gt;{% endif %}



&lt;form action=&quot;{% url &apos;polls:vote&apos; question.id %}&quot; method=&quot;post&quot;&gt;

{% csrf_token %}

{% for choice in question.choice_set.all %}

      &lt;input type=&quot;radio&quot; name=&quot;choice&quot; id=&quot;choice{{ forloop.counter }}&quot; value=&quot;{{ choice.id }}&quot;&gt;

      &lt;label for=&quot;choice{{ forloop.counter }}&quot;&gt;{{ choice.choice_text }}&lt;/label&gt;&lt;br&gt;

{% endfor %}

&lt;input type=&quot;submit&quot; value=&quot;Vote&quot;&gt;

&lt;/form&gt;
--&gt;
&lt;p&gt;일단 집어 넣었다. 무슨말인지는 설명이 나오는데… 대충 짚고 가자 …&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각질문 선택 항목에 대한 라디오 버튼을 표시하고 클릭할 수 있게 한다.  (참고 왼쪽 사진!!) 버튼 옆 value는 질문과 연관된 선택 항목의 ID이다. 각 버튼의 name은 “Choice”이다.&lt;/li&gt;
&lt;li&gt;세번째 단락에서 form action에서 method=“POST”를 하였다. POST는 GET에 반대되는 개념으로 입력하고 제출되었을 때 서버 쪽 데이터가 바뀌어 진다. 서버 쪽 데이터를 바꿀 form을 쓰고 싶다면 POST를 써야한다. 이건 쟝고에 국한된 정보가 아니고 웹개발자에게 유용한 팁이다. &lt;/li&gt;
&lt;li&gt;forloop.counter는 For태그가 반복 한 횟수를 나타낸다.&lt;/li&gt;
&lt;li&gt;POST form을 쓸 때에는 CRSF(Cross Site Request Forgeries)를 조심해야 한다. 하지만 장고에서는 이런 것을 보호해준다. 걱정 ㄴㄴ.  내부 URL 쓸 때에 csrf_token 을 써라~~&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vote()함수를 가상으로 만들어 주었다. polls/views.py에 추가를 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;polls/views.py&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;from django.http import HttpResponse, HttpResponseRedirect&lt;/p&gt;
&lt;p&gt;from django.shortcuts import get&lt;em&gt;object&lt;/em&gt;or_404, render&lt;/p&gt;
&lt;p&gt;from django.urls import reverse&lt;/p&gt;
&lt;p&gt;from .models import Choice, Question&lt;/p&gt;
&lt;p&gt;def vote(request, question_id):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  question = get_object_or_404(Question, pk=question_id)

  try: selected_choice = question.choice_set.get(pk=request.POST[&amp;#39;choice&amp;#39;])

 

  except (KeyError, Choice.DoesNotExist):



  &amp;quot;&amp;quot;&amp;quot;Redisplay the question voting form.&amp;quot;&amp;quot;&amp;quot;



  return render(request, &amp;#39;polls/detail.html&amp;#39;, { &amp;#39;question&amp;#39;: question, &amp;#39;error_message&amp;#39;: &amp;quot;You didn&amp;#39;t select a choice.&amp;quot;, })

  else: selected_choice.votes += 1 selected_choice.save()



  &amp;quot;&amp;quot;&amp;quot;Always return an HttpResponseRedirect after successfully dealing

  with POST data. This prevents data from being posted twice if a

  user hits the Back button.&amp;quot;&amp;quot;&amp;quot;



  return HttpResponseRedirect(reverse(&amp;#39;polls:results&amp;#39;, args=(question.id,))) *&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여기서 아직 우리가 다루지 못한 몇가지가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;request.POST 는 키로 전송된 자료에 접근할 수 있도록 해주는 사전과 같은 객체다. (try부분에 있다. ) 여기 request.POST[‘choice’]는 선택된 설문의 ID를 문자열로 반환한다.&lt;strong&gt;request.POST의 값은 항상 문자열이다.&lt;/strong&gt; 장고에서는 같은 방법으로 request.GET도 제공한다.&lt;/li&gt;
&lt;li&gt;POST자료에 request.POST[‘choice’]의 choice가 없으면 KeyError가 일어난다. 위의 코드는 KeyError를 체크하고, choice가 주어지지 않은 경우에는 에러 메시지와 함게 설문조사 폼을 다시 보여줌.&lt;/li&gt;
&lt;li&gt;설문지의 수가 증가한 이후에, 코드는 일반 HttpResponse가 아닌 HttpResponseRedirect를 반환하고, HttpResponseRedirect는 하나의 인수를 받는다.. 그 인수는 사용자가 재전송할 URL 이다. &lt;/li&gt;
&lt;li&gt;HttpResponseRedirect 안에 reverse()함수를 사용하고 있다. 이 함수는 view 함수에서 URL을 하드코딩하지 않도록 도와준다. 이 함수를 호출하면 urlpatterns에서 name 이 results인 것을 찾게 될 것이고 ‘/polls/1/results/‘를 반환하게 될 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;reverse()&lt;/p&gt;
&lt;p&gt;reverse(viewname, urlconf=None, args=None, kwargs=None, current_app=None)&lt;/p&gt;
&lt;p&gt;viewname : can be a URL pattern name  or  the callable view object.&lt;/p&gt;
&lt;p&gt;ex) &lt;/p&gt;
&lt;p&gt;urls.py
path(‘archive/’, views.archive, name=‘news-archive’) 가 있다고 치고,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;reverse(‘news-archive’)&lt;/em&gt; 로 쓸 수 있다.&lt;/p&gt;
&lt;p&gt;하지만 이것보단 &lt;/p&gt;
&lt;p&gt;&lt;em&gt;reverse(views.archive)&lt;/em&gt;가 좋겠다.&lt;/p&gt;
&lt;p&gt;URL이 인자를 받아야 한다면 &lt;/p&gt;
&lt;p&gt;&lt;em&gt;HttpResponseRedirect(reverse(‘arch-summary’, args=[1945]))&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;로 쓸 수도 있다.&lt;/p&gt;
&lt;p&gt;키워드 인자일 경우&lt;/p&gt;
&lt;p&gt;reverse(‘admin:app&lt;em&gt;list’, kwargs = {‘app&lt;/em&gt;label’ : ‘auth’})&lt;/p&gt;
&lt;p&gt;위에서 한것처럼 이제 vote를 끝내면 results로 보낸다.  results를 설정해보자 &lt;/p&gt;
&lt;p&gt;polls/views.py 가서&lt;/p&gt;
&lt;p&gt;위에 모듈들은 놔두고&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;def results(request, question_id):&lt;/p&gt;
&lt;p&gt;  question = get&lt;em&gt;object&lt;/em&gt;or&lt;em&gt;404(Question, pk=question&lt;/em&gt;id)&lt;/p&gt;
&lt;p&gt;  return render(request, ‘polls/results.html’, {‘question’: question}) * &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;를 추가해준다.&lt;/p&gt;
&lt;p&gt;Detail()뷰와 동일하다. 이제 템플릿 안에 results.html을 만든다.&lt;/p&gt;
&lt;p&gt;polls/templates/polls/results.html&lt;/p&gt;
&lt;h1&gt;{{ question.question_text }}&lt;/h1&gt;
&lt;ul&gt; {% for choice in question.choice_set.all %}
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  &amp;lt;li&amp;gt;{{ choice.choice_text }} -- {{ choice.votes }}

        vote{{ choice.votes|pluralize }}

  &amp;lt;/li&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;{% endfor %}&lt;/p&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;{% url &apos;polls:detail&apos; question.id %}&quot;&gt;Vote again?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;대략 이렇게 하고 나면 사진 처럼 나온다! localhost:8000/polls &lt;/p&gt;
&lt;p&gt;정상 작동한다. 따라하는 것도 힘드네.&lt;/p&gt;
&lt;p&gt;경쟁 상태(race condition)을 조심해야 한다. 문제 해결은 Avoiding race conditions using F()을 참고하라신다.&lt;/p&gt;
&lt;h2 id=&quot;제너릭-뷰-사용하기코딩은-최소한으로-use-generic-viewsless-code-is-better&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A0%9C%EB%84%88%EB%A6%AD-%EB%B7%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0%EC%BD%94%EB%94%A9%EC%9D%80-%EC%B5%9C%EC%86%8C%ED%95%9C%EC%9C%BC%EB%A1%9C-use-generic-viewsless-code-is-better&quot; aria-label=&quot;제너릭 뷰 사용하기코딩은 최소한으로 use generic viewsless code is better permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;제너릭 뷰 사용하기:코딩은 최소한으로 (Use generic views:Less code is better)&lt;/h2&gt;
&lt;p&gt;알쓸전컴블로그에서 퍼온 것:&lt;/p&gt;
&lt;p&gt;_URL에서 전달 된 매개 변수에 따라 데이터베이스에서 데이터를 가져 오고 이것을 view에서 render 함수 등을 통해&lt;/p&gt;
&lt;p&gt;템플릿에 리턴하는 기본 웹 개발의 일반적인 경우를 장고에서는 제너릭뷰를 제공하여 적은 코드로 사용할 수 있게 해준다._&lt;/p&gt;
&lt;p&gt;쟝고 튜토리얼에 있는 것:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;URL에서 전달 된 매개 변수에 따라 데이터베이스에서 데이터를 가져 오는 것과 템플릿을 로드하고 렌더링 된 템플릿을 리턴하는 기본 웹 개발의 일반적인 경우를 나타냅니다. Django는 이런 매우 일반적인 경우를 위해 “제너릭 뷰”시스템이라는 지름길을 제공합니다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;구구의 개발공부 블로그:&lt;/p&gt;
&lt;p&gt;URL에서 전달된 매개변수에 따라 데이터베이스에서 데이터를 가져오는 것과 템플릿을 로드하고 렌더링된 템플릿을 리턴하는 기본 웹 개발의 일반적인 경우를 제너릭 뷰 시스템이라는 지름길을 제공한다.
제너릭 뷰는 일반적인 패턴을 추상화하여 코드를 줄일 수 있다.
제너릭 뷰로 전환하려면 urls.py와 views.py의 수정이 필요하다.&lt;/p&gt;
&lt;p&gt;이렇게 구구절절 비슷한 말만 있어서 이해가 당장 어려웠지만!! 나만의 개념을 만들기 위해 밑에 것들을 먼저 보는게 좋을 것 같다.&lt;/p&gt;
&lt;p&gt;일단 튜토에서는 일부러 어렵게 views를 작성하게 의도했고 쉽게 갈 수 있는 법을 알려준다. 어느 학원이나 비슷한 방법으로 가르치는 것 같다. &lt;/p&gt;
&lt;p&gt;제너릭뷰를 사용하여 쉽게 가는 법, 3가지 해야할 행동&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URLconf를 변환하기&lt;/li&gt;
&lt;li&gt;불필요한 오래된보기 중 일부를 삭제&lt;/li&gt;
&lt;li&gt;Django의 제너릭 뷰를 기반으로 새로운 뷰 도입&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;--url-conf&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#--url-conf&quot; aria-label=&quot;  url conf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;- URL conf&lt;/h3&gt;
&lt;p&gt;polls/urls.py 에서 path를 고친다. question_id를 primary key인 pk로 고친다. 그리고 views뒤에 덧붙인다. 오른쪽 그림처럼 대략 고치고 바로 views를 수정하러 가야한다.&lt;/p&gt;
&lt;p&gt;polls/views.py에서 고칠 것이 많은데  urls에서 수정한 것 처럼 vote빼고 고치면 된다. index, detail, results를 수정한다.&lt;/p&gt;
&lt;p&gt;중간 중간 들어가는 대문자를 놓쳐서 서버가동했을 때에 오류가 많이 떴었다. 타이핑에 신중을 한번 더 더해야겠다는 생각을 한번 더 되새긴다.&lt;/p&gt;
&lt;p&gt;간략히 옛버전과 적용된 버전의 차이를 그림으로 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;왼쪽 : old version , 오른쪽 : generic view 적용 후
얼핏 큰 차이는 없어 보이는 것은 template의 경로를 우리가 지정해야 되서 그렇다. 원래 템플릿을 쟝고에서 제너릭 뷰(Generic View)를 쓸 때에 &lt;app name&gt;/&amp;#x3C;model&lt;em&gt;name&gt;&lt;/em&gt;detail.html 같은 식으로 형식을 사용한다. 근데 우리는 지금까지 그렇게 하지 않았기 때문에 저렇게 지정해줬고 아니면 파일이름을 바꿔도 된다.&lt;/p&gt;
&lt;p&gt;두가지의 제너릭 뷰를 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;ListView&lt;/p&gt;
&lt;p&gt;DetailView&lt;/p&gt;
&lt;p&gt;이 두view는 각각 “개체 목록 표시” 및 “특정 개체 유형에 대한 세부 정보 페이지 표시”개념을 추상화 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각 제너릭 뷰는 어떤 모델이 적용될 것인지를 알아야 한다. model 속성을 사용하여 제공됨&lt;/li&gt;
&lt;li&gt;DetailView 제너릭 뷰는 URL에서 캡쳐 된 기본키 값이 ”Pk”\ 라고 기대하기 때문에 ”question_id를 제너릭 뷰를 위해 pk로 변경한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이로써 4장을 마치는데 내가 생각한 제너릭 뷰의 개념은&lt;/p&gt;
&lt;p&gt;말 그대로 일반적인 뷰라고 생각한 후 자주 쓰고 귀찮게 돌아갈 필요없는 것들에 대해 간단히 View를 만들 수 있게 해주는 것이다. 똑같은 말인가..? 그냥 편의를 위해 반복할 것들을 줄여준 것. 잘 알아놓으면 다음에 편하게 살 수 있다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[TIL-장고 튜토리얼 3번째(#3 Django tutorial)]]></title><description><![CDATA[쟝고를 알기엔 내가 아직 너무 부족하다.]]></description><link>http://guseowhtjs1231.github.io//posts/til-django-tutorial-3</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/til-django-tutorial-3</guid><pubDate>Thu, 07 May 2020 17:40:32 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/media/05072020blog.png&quot; alt=&quot;05072020blog.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.djangoproject.com/ko/3.0/intro/tutorial03/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://docs.djangoproject.com/ko/3.0/intro/tutorial03/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;쟝고-우리의-장고&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9F%9D%EA%B3%A0-%EC%9A%B0%EB%A6%AC%EC%9D%98-%EC%9E%A5%EA%B3%A0&quot; aria-label=&quot;쟝고 우리의 장고 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;쟝고 우리의 장고&lt;/h4&gt;
&lt;h4 id=&quot;웹페이지를-쉽게-만들-수-있게-해주는-장고&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80%EB%A5%BC-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4-%EC%88%98-%EC%9E%88%EA%B2%8C-%ED%95%B4%EC%A3%BC%EB%8A%94-%EC%9E%A5%EA%B3%A0&quot; aria-label=&quot;웹페이지를 쉽게 만들 수 있게 해주는 장고 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;웹페이지를 쉽게 만들 수 있게 해주는 장고~&lt;/h4&gt;
&lt;h4 id=&quot;계속-배워본다&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B3%84%EC%86%8D-%EB%B0%B0%EC%9B%8C%EB%B3%B8%EB%8B%A4&quot; aria-label=&quot;계속 배워본다 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;계속 배워본다.&lt;/h4&gt;
&lt;h2 id=&quot;뷰-추가하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B7%B0-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0&quot; aria-label=&quot;뷰 추가하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;뷰 추가하기&lt;/h2&gt;
&lt;p&gt;polls/views.py 를 건든다.&lt;/p&gt;
&lt;p&gt;옆의 함수들을 원래 있는 def index 밑에 추가 해준다.&lt;/p&gt;
&lt;p&gt;*def detail(request, question&lt;em&gt;id):
return HttpResponse(“You’re looking at question %s.” % question&lt;/em&gt;id)&lt;/p&gt;
&lt;p&gt;def results(request, question&lt;em&gt;id):
response = “You’re looking at the results of question %s.”
return HttpResponse(response % question&lt;/em&gt;id)&lt;/p&gt;
&lt;p&gt;def vote(request, question&lt;em&gt;id):
return HttpResponse(“You’re voting on question %s.” % question&lt;/em&gt;id)*&lt;/p&gt;
&lt;p&gt;그리고&lt;/p&gt;
&lt;p&gt;polls/urls.py&lt;/p&gt;
&lt;p&gt;로 가서 밑의 함수들을 연결시켜준다.&lt;/p&gt;
&lt;p&gt;*from django.urls import path&lt;/p&gt;
&lt;p&gt;from . import views&lt;/p&gt;
&lt;p&gt;urlpatterns = [&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ex: /polls/
path(&amp;#39;&amp;#39;, views.index, name=&amp;#39;index&amp;#39;),
# ex: /polls/5/
path(&amp;#39;/&amp;#39;, views.detail, name=&amp;#39;detail&amp;#39;),
# ex: /polls/5/results/
path(&amp;#39;/results/&amp;#39;, views.results, name=&amp;#39;results&amp;#39;),
# ex: /polls/5/vote/
path(&amp;#39;/vote/&amp;#39;, views.vote, name=&amp;#39;vote&amp;#39;),&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;]*&lt;/p&gt;
&lt;p&gt;그니까 저기 urls에서는&lt;/p&gt;
&lt;p&gt;views에서 지정한 결과가 나오게 하는 화면? 내가 만들어 놓은 글들에 연결 시켜주는 path함수를 넣어 우리가 url에 치면 연결 시켜준다.&lt;/p&gt;
&lt;p&gt;밑에 결과물들을 보면서 이해하면 빠르다.&lt;/p&gt;
&lt;p&gt;우리가 /polls/34/를 요청하면 쟝고에서는 mysite.urls파이썬 모듈을 불러오고 mysite/setting.py 속 ROOT_URLCONF 설정에 의해 해당 모듈을 바라보도록 지정 되어 있다. mysite.urls에서 urlpatterns라는 변수를 찾고 순서대로 패턴을 따라감.&lt;/p&gt;
&lt;p&gt;&amp;#x3C;int:question_id&gt;/&lt;/p&gt;
&lt;p&gt;int:이게 어디 문법인지는(js인지..)모르겠지만 정수의 views.py에 넣은 question_id(인자)를 받는다는 것 같다. 다른 path에 넣는 것도 똑같고.&lt;/p&gt;
&lt;p&gt;localhost:8000/polls/34/ 결과물&lt;/p&gt;
&lt;p&gt;localhost:8000/polls/34/results/ 결과물&lt;/p&gt;
&lt;p&gt;localhost:8000/polls/34/vote 결과물&lt;/p&gt;
&lt;h3 id=&quot;뷰가-실제로-뭔가-하도록-만들어-보기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B7%B0%EA%B0%80-%EC%8B%A4%EC%A0%9C%EB%A1%9C-%EB%AD%94%EA%B0%80-%ED%95%98%EB%8F%84%EB%A1%9D-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EA%B8%B0&quot; aria-label=&quot;뷰가 실제로 뭔가 하도록 만들어 보기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;뷰가 실제로 뭔가 하도록 만들어 보기!&lt;/h3&gt;
&lt;p&gt;뷰는 실제로 두가지 중 하나를 하도록 되어 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;요청된 페이지의 내용이 담긴 HttpResponse 객체를 반환&lt;/li&gt;
&lt;li&gt;Http404 같은 예외를 발생&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*하드코딩 이란?&lt;/p&gt;
&lt;p&gt;데이터를 코드 내부에 직접 입력하는 것. 기술적으로는 데이터가 실행 바이너리(exe파일 등)에 합쳐져 있는 상태를 말함.*
프로그래머는 하드코딩을 지양하고 최대한 외부로 데이터를 빼는 노력을 해야함.&lt;/p&gt;
&lt;p&gt;슬슬 이해와 습득의 고리가 끊기는 게 느껴진다. 그래서 블로그 작성하는 시간도 길어진다…&lt;/p&gt;
&lt;p&gt;*두가지의 상황이 쟝고에게 필요하다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HttpResponse 객체&lt;/li&gt;
&lt;li&gt;Http404 같은 예외*&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;httpresponse&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#httpresponse&quot; aria-label=&quot;httpresponse permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HttpResponse&lt;/h2&gt;
&lt;p&gt;옆의 내용대로 views.py 에 추가해준다. 밑에 주석에 있는 것처럼 다른  것들은 내버려두고 추가한다. 여기서 문제는 옆에 index함수가 하드코딩이 되어 있다는 것이다. 함수 안에 데이터가 입력되어 있다. 이것을 쟝고의 템플릿(template)를 통해서 파이썬 코드로 부터 디자인을 분리할 수 있다.&lt;/p&gt;
&lt;p&gt;Polls디렉토리에 template라는 디렉토리를 만든다. 그러면 쟝고는 여기서 템플릿 디렉토리를 찾을 것이다. &lt;/p&gt;
&lt;p&gt;템플릿 디렉토리 안에 polls디렉토리를 또 만들고 index.html에 옆의 코드를 붙여 넣는다.&lt;/p&gt;
&lt;p&gt;솔직히 오른쪽 코드 어떤 형식으로 적은지는 모르겠지만 대충 for문이 적혀 있는 것으로 보여진다. &lt;/p&gt;
&lt;p&gt;그리고 위에 polls/views.py에 적은 것을 템플릿 기능을 사용할 수 있게 고쳐쓴다. &lt;/p&gt;
&lt;p&gt;latest&lt;em&gt;question&lt;/em&gt;list 는 그대로인 것을 볼 수 있다. &lt;/p&gt;
&lt;p&gt;그리고 output이 없어지고 template이 생겼다.  .join 으로 넣지 않고 django.template에서 import한 loader를 사용한다. &lt;/p&gt;
&lt;p&gt;loader.get_template(‘경로’)&lt;/p&gt;
&lt;p&gt;context도 새로 생겼다. 이거는 return 에 template.render에서 받아쓰려고 들어 가는 것 같다.&lt;/p&gt;
&lt;p&gt;여기서 render()를 알아봐야한다.&lt;/p&gt;
&lt;h3 id=&quot;render---shortcuts&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#render---shortcuts&quot; aria-label=&quot;render   shortcuts permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;render() - Shortcuts&lt;/h3&gt;
&lt;p&gt;템플릿에 context를 채워넣어 표현한 결과를 HttpResponse 객체와 함께 돌려주는 구문을 자주 쓰기 때문에 쟝고(Django)에서 쉽게 표현할 수 있도록 단축기능(Shortcuts)을 제공한다. 그게 render다.&lt;/p&gt;
&lt;p&gt;방금 적은 index()를 단축기능을 사용하여 적으면 다음과 같이 된다. &lt;/p&gt;
&lt;p&gt;latest&lt;em&gt;question&lt;/em&gt;list는 변함없고,&lt;/p&gt;
&lt;p&gt;context 도 같다. 그대신 loader.get_template를 쓴 template가 사라졌다.&lt;/p&gt;
&lt;p&gt;그리고 바로 return을 &lt;/p&gt;
&lt;p&gt;render(request, ‘polls/index.html’,context)로 받는다. 확실히 위에 것보다 간략하고 단순해졌다.&lt;/p&gt;
&lt;p&gt;모든 뷰에 적용할 거라면,  loader와 HttpResponse를 import하지 않아도 된다. (만약 detail, results, vote에서 stub 메소드를 가지고 있다면, HttpResponse를 유지해야 한다.) &lt;/p&gt;
&lt;p&gt;Stub 메소드:  다른 프로그래밍 기능을 대리하는 코드, 기존 코드를 흉내내거나 아직 개발되지 않은 코드를 임시로 대치하는 역할.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;reunder()&lt;/em&gt;함수는 request 객체를 첫번째 인수로 받고, 템플릿 이름을 두번째 인수로 받으며, context 사전형 객체를 세번째 선택적(optional) 인수로 받는다. 인수로 지정된 context로 표현된 템플릿의 HttpResponse 객체가 반환됨.&lt;/p&gt;
&lt;h3 id=&quot;404-에러-일으키기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#404-%EC%97%90%EB%9F%AC-%EC%9D%BC%EC%9C%BC%ED%82%A4%EA%B8%B0&quot; aria-label=&quot;404 에러 일으키기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;404 에러 일으키기&lt;/h3&gt;
&lt;p&gt;다시 한번 옆의 그림처럼 detail 을 고쳐본다. 요청된 질문이 없는 질문일 경우 http404예외(excetion)를 발생 시키는 것이다.  일단 옆에 함수를 쳤다면 polls/detail.html을 만들어야된다. {{question}}이라고 임시로 적어놓고 저장시킨다.  그리고 서버를 가동해서 들어가보니 실제로 저렇게 떴다. (밑에 그림 참고)&lt;/p&gt;
&lt;h3 id=&quot;a-shortcut-getobjector_404&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#a-shortcut-getobjector_404&quot; aria-label=&quot;a shortcut getobjector_404 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A shortcut: get&lt;em&gt;object&lt;/em&gt;or_404()&lt;/h3&gt;
&lt;p&gt;저 위에서 render와 같은 종류의 친구이다. 시간을 절약시켜주기 위한 좋은 기능이라는 것 같다. 방금 전에 polls/views.py에 적은 길고 긴 함수가 django.shortcuts의 get&lt;em&gt;object&lt;/em&gt;or&lt;em&gt;404함수로 인해 매우 간단해 진다. 그림을 참고 하면 알겠지만 다지우고 question이 get&lt;/em&gt;object&lt;em&gt;or&lt;/em&gt;404함수로 이루어져있고 2가지의 인자만 받는다. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;get&lt;em&gt;object&lt;/em&gt;or_404&lt;/em&gt; 함수는 django의 모델을 첫번째 인자로 받는다. 그리고 키워드 인자를 몇개 받아 첫번째 인자로 받아진 django 모델의 manager.py의  get()으로 넘겨진다. 객체가 존재 하지 않을때 http404에러가 뜨게 된다.&lt;/p&gt;
&lt;p&gt;비슷한게 또 있는데&lt;/p&gt;
&lt;p&gt;get&lt;em&gt;list&lt;/em&gt;or_404함수가 있다. 차이점은 get()으로 넘기지 않고 filter()로 넘긴다는 것이다. 객체가 아니고 리스트가 비어있을 때 Http404에러를 뜨게 한다.&lt;/p&gt;
&lt;p&gt;템플릿 시스템 사용하기&lt;/p&gt;
&lt;p&gt;아까 대충 쓰고 저장했던 detail.html을 왼쪽과 같이 적고 저장한다. &lt;/p&gt;
&lt;p&gt;대충 html보면&lt;/p&gt;
&lt;p&gt;h1문단 크기로 질문이 들어가고 &lt;/p&gt;
&lt;p&gt;ul - unorderd list로 질문의 선택지들이 줄줄이 나오는 것 같다.&lt;/p&gt;
&lt;p&gt;오른쪽처럼 텅빈 흰 화면 왼쪽위 구석에 나왔다.&lt;/p&gt;
&lt;p&gt;localhost:8000/polls/에 들어가서 질문을 클릭하면 저게 나왔다.&lt;/p&gt;
&lt;p&gt;그러니 결론은  복잡하게 하드코딩해가며 할 수도 있지만 쟝고의 기능들을 이용해서 편하게 가자 라는 것 같다. 그리고 파이썬 기초문법을 외운 것처럼 장고의 함수들도 외워야 될 것 같다.&lt;/p&gt;
&lt;p&gt;예전에 튜토리얼 part1할 때 , API가지고 놀기라는 챕터에서&lt;/p&gt;
&lt;p&gt;$python manage.py shell&lt;/p&gt;
&lt;p&gt;을 쳐서 이것 저것 쳤던 것들인데 그것들이 그대로 저장되어서 화면에 출력되었다.&lt;/p&gt;
&lt;h2 id=&quot;removing-hardcoded-urls-in-templates&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#removing-hardcoded-urls-in-templates&quot; aria-label=&quot;removing hardcoded urls in templates permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Removing hardcoded URLs in templates&lt;/h2&gt;
&lt;p&gt;templates/polls/index.html에 적었던,&lt;/p&gt;
&lt;p&gt;하드코딩된 이 것을 template 기능을 활용하여 하드코딩을 없앨 수 있다(?)잘 모르겠지만 일단 의존성을 없앨 수 있다고 한다.&lt;/p&gt;
&lt;p&gt;오른쪽 처럼 고칠 수 있다. 왜냐하면 polls.url안에 PATH를 기억하면 된다.&lt;/p&gt;
&lt;p&gt;만약 우리가 url을 바꾸고 싶다면 polls.url을 고치면 된다.&lt;/p&gt;
&lt;p&gt;마지막으로 &lt;/p&gt;
&lt;p&gt;이름 공간(Namespace)&lt;/p&gt;
&lt;p&gt;왼쪽: 변경전 오른쪽 : 네임스페이싱을 한 것
개체를 구분할 수 있는 범위를 나타내는 말로 일반적으로 하나의 이름 공간에서는 하나의 이름이 단 하나의 개체만을 가리키게 된다. 그러니까 쉽게 말하면 똑같은 이름들 헷갈리지 않게 앞에 뭐 붙이자 이런 것. &lt;/p&gt;
&lt;p&gt;그러니까 &lt;/p&gt;
&lt;p&gt;강남구 역삼동 봉은사로44길 3호가 나의 주소다라고 하면&lt;/p&gt;
&lt;p&gt;강남구 역삼동 이 이름공간 식별자 이다. - namespace identifier&lt;/p&gt;
&lt;p&gt;봉은사로 44길 3호가 로컬 이름이다. - local name&lt;/p&gt;
&lt;p&gt;전국적으로 ‘봉은사로 44길’ 많다고 했을 때 강남구 역삼동을 붙이면 아~ 강남구 역삼동의 봉은사로 구나라고 되는 것처럼 이해하면 될 것 같다. &lt;/p&gt;
&lt;p&gt;네이밍 시스템 (Naming system)&lt;/p&gt;
&lt;p&gt;name = &lt;namespace identifier&gt; separator &lt;local name&gt;&lt;/p&gt;
&lt;p&gt;그러면 위에 코드를 봤을 때&lt;/p&gt;
&lt;p&gt;polls가 이름공간 식별자 (namespace identifier)&lt;/p&gt;
&lt;p&gt;: 가 구분자 (separator)
detail이 (local name)
이다. &lt;/p&gt;
&lt;p&gt;이런 것을 하는 이유는 여러 개발자나 회사끼리 협업을 할 때에 코드끼리 충돌을 방지하는 것이다. 혼자 개발한다면 크게 필요 없을 거다.&lt;/p&gt;
&lt;figure&gt;
	&lt;blockquote&gt;
		&lt;p&gt;잠을 자면 꿈을 꾸지만 잠을 이기면 꿈을 이룬다.&lt;/p&gt;
		&lt;footer&gt;
			&lt;cite&gt;— Pro Insomnia&lt;/cite&gt;
		&lt;/footer&gt;
	&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;언젠가 낚시배를 사서 주말에 호수에서 낚시를 할 것이다. 오랜 꿈이다.&lt;/p&gt;
&lt;p&gt;— Youngbin Ha&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Session- 웹은 으뜨케 작동하는가?(How does the web work?)]]></title><description><![CDATA[코딩을 알기 전에 알아야 할 건 알아야 하지 않겠는가..]]></description><link>http://guseowhtjs1231.github.io//posts/How-does-the-web-work</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/How-does-the-web-work</guid><pubDate>Wed, 06 May 2020 15:00:32 GMT</pubDate><content:encoded>&lt;p&gt;일단 호스팅 개념부터 짚고 간다.&lt;/p&gt;
&lt;h2 id=&quot;호스팅hosting-web-hosting-service&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%98%B8%EC%8A%A4%ED%8C%85hosting-web-hosting-service&quot; aria-label=&quot;호스팅hosting web hosting service permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;호스팅(Hosting, Web hosting service)&lt;/h2&gt;
&lt;p&gt;: 인터넷에 띄운다는 것은 홈페이지의 구성파일들이(html, css, js) 인터넷에 “항상” 연결되고, “절대”꺼지지 않는 호스트 컴퓨터(웹 서버)에 저장되어 있다가 사용자의 요청이 오면 언제든 응답.&lt;/p&gt;
&lt;p&gt;예) AWS ec2/S3, cafe24 호스팅 센터 등&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A web hosting service is a type of Internet hosting service that allows individuals and organizations to make their website accessible via the World Wide Web. Web hosts are comanies that provide space on a server owned or leased for use by clients, as well as providing Internet connectivity, typically in a data center&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;HTML: 웹사이트 구조&lt;/p&gt;
&lt;p&gt;CSS : 스타일링&lt;/p&gt;
&lt;p&gt;JavaScript: Interaction&lt;/p&gt;
&lt;p&gt;간략 설명 그림&lt;/p&gt;
&lt;h2 id=&quot;ip&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#ip&quot; aria-label=&quot;ip permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IP&lt;/h2&gt;
&lt;p&gt;IP 주소는 internet 으로 통신하는 각 device(컴퓨터, 통신장비)에 부여된 고유한 값.&lt;/p&gt;
&lt;p&gt;스마트폰이나 노트북부터 대규모 소매 웹 사이트의 콘텐츠를 서비스하는 서버에 이르기까지 인터넷상의 모든 컴퓨터는 숫자를 사용하여 서로를 찾고 통신하며, 이러한 숫자를 IP주소라고 한다. &lt;/p&gt;
&lt;p&gt;An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.&lt;/p&gt;
&lt;h2 id=&quot;domain-domain-name&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#domain-domain-name&quot; aria-label=&quot;domain domain name permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Domain (Domain name)&lt;/h2&gt;
&lt;p&gt;문자(string)으로 된 고유 주소. 수많은 IP 주소를 사람이 외워서 접속할 수 없기 때문에 기억하기 쉽다.&lt;/p&gt;
&lt;p&gt;ex)www.naver.com , www.google.com &lt;/p&gt;
&lt;p&gt;A domain name is an identification string that defines a realm of administrative autonomy, authority or control within the Internet.&lt;/p&gt;
&lt;p&gt;도메인 구조&lt;/p&gt;
&lt;h2 id=&quot;dns-domain-name-system&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dns-domain-name-system&quot; aria-label=&quot;dns domain name system permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DNS (Domain Name System)&lt;/h2&gt;
&lt;p&gt; DNS는 사람이 읽을 수 있는 도메인 이름을 머신이 읽을 수 있는 IP 주소로 변환.&lt;/p&gt;
&lt;p&gt;DNS는 이름과 숫자 간의 매핑을 관리하여 마치 전화번호부와 같은 기능을 한다. DNS서버는 이름에 대한 요청을 IP주소로 변환하여 최종 사용자가 도메인 이름을 웹 브라우저에 입력할 때 해당 사용자를 어떤 서버를 연결할 것인지를 제어. 이 요청을 쿼리라고 부른다.&lt;/p&gt;
&lt;p&gt;예) Amazon Route 53, Cafe24 도메인관리, 가비아 네임서버 관리&lt;/p&gt;
&lt;p&gt;*DNS 서버란 도메인과 서버를 연결해주는 중간 서버로, 도메인 이름을 인터넷상의 주소(IP 주소)로 변환시켜 원하는 컴퓨터를 찾아갈 수 있도록 함.&lt;/p&gt;
&lt;p&gt;대략 이런 느낌임.&lt;/p&gt;
&lt;p&gt;마지막으로&lt;/p&gt;
&lt;h2 id=&quot;배포deploy&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%ACdeploy&quot; aria-label=&quot;배포deploy permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;배포(Deploy)&lt;/h2&gt;
&lt;p&gt;그동한 개발하던 것을 세상(인터넷상)에 공개하고 모든 사람들이 접근해서 볼 수 있게 하는 것을 의미.&lt;/p&gt;
&lt;figure&gt;
	&lt;blockquote&gt;
		&lt;footer&gt;
		&lt;p&gt;
			내 인생에 보증이란 없다.&lt;br&gt;
			 No co-sign in my life
		&lt;/p&gt;	
		&lt;cite&gt;— Youngbin John Ha.&lt;/cite&gt;
		&lt;/footer&gt;
	&lt;/blockquote&gt;
&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Session-웹서비스에 대해서(about Web Service)]]></title><description><![CDATA[나는 꿈꾸고 상상한다. 누구나 원하는 것을 이루면 좋겠다라고]]></description><link>http://guseowhtjs1231.github.io//posts/a-session-what-is-webservice</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/a-session-what-is-webservice</guid><pubDate>Tue, 05 May 2020 17:00:32 GMT</pubDate><content:encoded>&lt;h1 id=&quot;쟝고---2세대형-웹프레임워크---백엔드-프론트엔드&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9F%9D%EA%B3%A0---2%EC%84%B8%EB%8C%80%ED%98%95-%EC%9B%B9%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC---%EB%B0%B1%EC%97%94%EB%93%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C&quot; aria-label=&quot;쟝고   2세대형 웹프레임워크   백엔드 프론트엔드 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;쟝고 - 2세대형 웹프레임워크  ( 백엔드 프론트엔드)&lt;/h1&gt;
&lt;p&gt;예전에는 서버개발자냐 아니냐  끝 나머지는 웹퍼블리셔 웹디자이너 뿐이였음&lt;/p&gt;
&lt;p&gt;리액트가 나오면서 각자의 영역이 뚜렷해짐.&lt;/p&gt;
&lt;p&gt;쟝고에서는&lt;/p&gt;
&lt;p&gt;models와 views가 중요함.&lt;/p&gt;
&lt;p&gt;+models - 프레임&lt;/p&gt;
&lt;p&gt;+views - 로직, 컨트롤러&lt;/p&gt;
&lt;p&gt;기본적으로 쟝고에서 이 3가지만 쓰면 됨.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;models&lt;/li&gt;
&lt;li&gt;urls.py&lt;/li&gt;
&lt;li&gt;views - controller&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;백엔드인 우리에게 중요한 것은.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;END Point&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;쟝고의 가장 강력한 기능&lt;/p&gt;
&lt;p&gt;ORM &lt;/p&gt;
&lt;p&gt;Oriented-Relational Mapping&lt;/p&gt;
&lt;p&gt;API 설계/ 구현을 위해서 알아야 할 것&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database&lt;/li&gt;
&lt;li&gt;Web, HTTP&lt;/li&gt;
&lt;li&gt;AWS,cloud환경 (서버)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;쿼리스트링 - 서버에게 요청하는 문자열 , 검색 시스템은 get이게 하는 것.&lt;/p&gt;
&lt;p&gt;RESTful&lt;/p&gt;
&lt;p&gt;HTTP&lt;/p&gt;
&lt;p&gt;API
를 만들어야 되는데 이 세가지의 규칙을 알아야 함.&lt;/p&gt;
&lt;p&gt;이 세가지의 맞춘 API가 개발되어야됨.&lt;/p&gt;
&lt;h2 id=&quot;restful&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#restful&quot; aria-label=&quot;restful permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RESTful&lt;/h2&gt;
&lt;p&gt;“Representational State Transfer” 의 약자&lt;/p&gt;
&lt;p&gt;자원을 이름(자원의 표현)으로 구분하여 해당 자원의 상태(정보)를 주고 받는 모든 것을 의미한다.&lt;/p&gt;
&lt;h2 id=&quot;rest구성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#rest%EA%B5%AC%EC%84%B1&quot; aria-label=&quot;rest구성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REST구성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;자원(Resource) - URI&lt;/li&gt;
&lt;li&gt;행위(Verb) - HTTP METHOD&lt;/li&gt;
&lt;li&gt;표현(Representations)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;rest의-특징&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#rest%EC%9D%98-%ED%8A%B9%EC%A7%95&quot; aria-label=&quot;rest의 특징 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REST의 특징&lt;/h2&gt;
&lt;h3 id=&quot;1-uniform-유니폼-인터페이스&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-uniform-%EC%9C%A0%EB%8B%88%ED%8F%BC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4&quot; aria-label=&quot;1 uniform 유니폼 인터페이스 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Uniform (유니폼 인터페이스)&lt;/h3&gt;
&lt;p&gt;Uniform Interface는 URI로 지정한 리소스에 대한 조작을 통일되고 한정적인 인터페이스로 수행하는 아키텍처 스타일을 말합니다.&lt;/p&gt;
&lt;h3 id=&quot;2-stateless-무상태성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-stateless-%EB%AC%B4%EC%83%81%ED%83%9C%EC%84%B1&quot; aria-label=&quot;2 stateless 무상태성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Stateless (무상태성)&lt;/h3&gt;
&lt;p&gt;REST는 무상태성 성격을 갖습니다. 다시 말해 작업을 위한 상태정보를 따로 저장하고 관리하지 않습니다. 세션 정보나 쿠키정보를 별도로 저장하고 관리하지 않기 때문에 API 서버는 들어오는 요청만을 단순히 처리하면 됩니다. 때문에 서비스의 자유도가 높아지고 서버에서 불필요한 정보를 관리하지 않음으로써 구현이 단순해집니다.&lt;/p&gt;
&lt;h3 id=&quot;3-cacheable-캐시-가능&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-cacheable-%EC%BA%90%EC%8B%9C-%EA%B0%80%EB%8A%A5&quot; aria-label=&quot;3 cacheable 캐시 가능 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3) Cacheable (캐시 가능)&lt;/h3&gt;
&lt;p&gt;REST의 가장 큰 특징 중 하나는 HTTP라는 기존 웹표준을 그대로 사용하기 때문에, 웹에서 사용하는 기존 인프라를 그대로 활용이 가능합니다. 따라서 HTTP가 가진 캐싱 기능이 적용 가능합니다. HTTP 프로토콜 표준에서 사용하는 Last-Modified태그나 E-Tag를 이용하면 캐싱 구현이 가능합니다.&lt;/p&gt;
&lt;h3 id=&quot;4-self-descriptiveness-자체-표현-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-self-descriptiveness-%EC%9E%90%EC%B2%B4-%ED%91%9C%ED%98%84-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;4 self descriptiveness 자체 표현 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4) Self-descriptiveness (자체 표현 구조)&lt;/h3&gt;
&lt;p&gt;REST의 또 다른 큰 특징 중 하나는 REST API 메시지만 보고도 이를 쉽게 이해 할 수 있는 자체 표현 구조로 되어 있다는 것입니다.&lt;/p&gt;
&lt;h3 id=&quot;5-client---server-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#5-client---server-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;5 client   server 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5) Client - Server 구조&lt;/h3&gt;
&lt;p&gt;REST 서버는 API 제공, 클라이언트는 사용자 인증이나 컨텍스트(세션, 로그인 정보)등을 직접 관리하는 구조로 각각의 역할이 확실히 구분되기 때문에 클라이언트와 서버에서 개발해야 할 내용이 명확해지고 서로간 의존성이 줄어들게 됩니다.&lt;/p&gt;
&lt;h3 id=&quot;6-계층형-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#6-%EA%B3%84%EC%B8%B5%ED%98%95-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;6 계층형 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6) 계층형 구조&lt;/h3&gt;
&lt;p&gt;REST 서버는 다중 계층으로 구성될 수 있으며 보안, 로드 밸런싱, 암호화 계층을 추가해 구조상의 유연성을 둘 수 있고 PROXY, 게이트웨이 같은 네트워크 기반의 중간매체를 사용할 수 있게 합니다.&lt;/p&gt;
&lt;h3 id=&quot;rest-api-디자인-가이드&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#rest-api-%EB%94%94%EC%9E%90%EC%9D%B8-%EA%B0%80%EC%9D%B4%EB%93%9C&quot; aria-label=&quot;rest api 디자인 가이드 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REST API 디자인 가이드&lt;/h3&gt;
&lt;p&gt;중요한 2가지&lt;/p&gt;
&lt;h4 id=&quot;첫-번째-uri는-정보의-자원을-표현해야-한다리소스명은-동사보다는-명사를-사용&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B2%AB-%EB%B2%88%EC%A7%B8-uri%EB%8A%94-%EC%A0%95%EB%B3%B4%EC%9D%98-%EC%9E%90%EC%9B%90%EC%9D%84-%ED%91%9C%ED%98%84%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4%EB%A6%AC%EC%86%8C%EC%8A%A4%EB%AA%85%EC%9D%80-%EB%8F%99%EC%82%AC%EB%B3%B4%EB%8B%A4%EB%8A%94-%EB%AA%85%EC%82%AC%EB%A5%BC-%EC%82%AC%EC%9A%A9&quot; aria-label=&quot;첫 번째 uri는 정보의 자원을 표현해야 한다리소스명은 동사보다는 명사를 사용 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;첫 번째, URI는 정보의 자원을 표현해야 한다.(리소스명은 동사보다는 명사를 사용)&lt;/h4&gt;
&lt;h4 id=&quot;두-번째-자원에-대한-행위는-http-methodget-postputdelete로-표현한다&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%91%90-%EB%B2%88%EC%A7%B8-%EC%9E%90%EC%9B%90%EC%97%90-%EB%8C%80%ED%95%9C-%ED%96%89%EC%9C%84%EB%8A%94-http-methodget-postputdelete%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%9C%EB%8B%A4&quot; aria-label=&quot;두 번째 자원에 대한 행위는 http methodget postputdelete로 표현한다 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;두 번째, 자원에 대한 행위는 HTTP Method(GET, POST,PUT,DELETE)로 표현한다.&lt;/h4&gt;
&lt;h2 id=&quot;주의할-점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A3%BC%EC%9D%98%ED%95%A0-%EC%A0%90&quot; aria-label=&quot;주의할 점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;주의할 점&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;슬래시 구분자(/)는 계층 관계를 나타내는 데 사용&lt;/li&gt;
&lt;li&gt;URI 마지막 문자로 슬래시(/)를 포함하지 않는다.&lt;/li&gt;
&lt;li&gt;하이픈(-)은 URI 가독성을 높이는 데 사용&lt;/li&gt;
&lt;li&gt;밑줄(_)은 URI에 사용하지 않는다.&lt;/li&gt;
&lt;li&gt;URI 경로에는 소문자가 적합하다.&lt;/li&gt;
&lt;li&gt;파일 확장자는 URI에 포함시키지 않는다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;http&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#http&quot; aria-label=&quot;http permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP&lt;/h2&gt;
&lt;p&gt;request 와 response가 서로 주고받음. &lt;/p&gt;
&lt;p&gt;1.request
start line&lt;/p&gt;
&lt;p&gt;method - get, post, head, put , delete,&lt;/p&gt;
&lt;p&gt;get은 body에 데이터가없다&lt;/p&gt;
&lt;p&gt;post는 body에 데이터가 있다. 이렇게 하기러 한것이다.&lt;/p&gt;
&lt;p&gt;response될 타겟팅 목표가 엔드포인트 &lt;/p&gt;
&lt;p&gt;쟝고의 urls.py가 엔드포인트를 만듬.&lt;/p&gt;
&lt;p&gt;headers&lt;/p&gt;
&lt;p&gt;body&lt;/p&gt;
&lt;p&gt;json을 주고받을 수 있음.&lt;/p&gt;
&lt;p&gt;2.response - 요청에 대한 응답
status line. 상태라인? http version , 상태코드.&lt;/p&gt;
&lt;p&gt;응답코드가 있다.200 정상, 404, 401, 500(알수없는에러) 등등&lt;/p&gt;
&lt;p&gt;header에 담기는 것들&lt;/p&gt;
&lt;p&gt;cookies
인증 토큰&lt;/p&gt;
&lt;p&gt;body&lt;/p&gt;
&lt;p&gt;데이터를 바디에 실어 보냄.&lt;/p&gt;
&lt;p&gt;데이터타입 xml을 많이 썼으나 지금은 json(데이터타입)을 씀.&lt;/p&gt;
&lt;p&gt;외우면 좋을 것 &lt;/p&gt;
&lt;p&gt;가상환경만들기&lt;/p&gt;
&lt;p&gt;매 프로젝트마다 새로만들어서 하는 것이 좋음.&lt;/p&gt;
&lt;p&gt;conda create -n test03 python=3.8&lt;/p&gt;
&lt;p&gt;하고&lt;/p&gt;
&lt;p&gt;conda activate test03&lt;/p&gt;
&lt;p&gt;그리고 &lt;/p&gt;
&lt;p&gt;pip install django 하고 가상환경&lt;/p&gt;
&lt;p&gt;django-admin&lt;/p&gt;
&lt;p&gt;으로 설치확인&lt;/p&gt;
&lt;p&gt;명령어 확인&lt;/p&gt;
&lt;p&gt;outer test03은 쓸모없고&lt;/p&gt;
&lt;p&gt;inner test03이 중요한 것.&lt;/p&gt;
&lt;p&gt;manage.py가 있는 곳이 물리적 최상위 공간&lt;/p&gt;
&lt;p&gt;web server service 할 때 &lt;/p&gt;
&lt;p&gt;wsgi.py&lt;/p&gt;
&lt;p&gt;web service gateway interface가 필요함.&lt;/p&gt;
&lt;p&gt;파이썬을 웹서비스하려면 필요함&lt;/p&gt;
&lt;p&gt;asgi는 파이썬 3.0부터 나옴 비동기 통신 서버를 위해서 나옴. 사례가 많지 않음.&lt;/p&gt;
&lt;p&gt;assingcorss gateway interface?&lt;/p&gt;
&lt;p&gt;세팅스를 봄.&lt;/p&gt;
&lt;p&gt;debug는 개발때에는 true이고 배포하고나서는 false&lt;/p&gt;
&lt;p&gt;installed app&lt;/p&gt;
&lt;p&gt;어드민과 어스는 비활성화 주석처리&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin  - 관리자 기능&lt;/li&gt;
&lt;li&gt;auth  - 로그인 기능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;middleware&lt;/p&gt;
&lt;p&gt;csrf - 페이지 위변조하는지 체킹하는 보안기능&lt;/p&gt;
&lt;p&gt;auth - 로그인 기능&lt;/p&gt;
&lt;p&gt;비활성화&lt;/p&gt;
&lt;p&gt;root_urlconf = ‘test03.urls’  기본 기준이 되는 url&lt;/p&gt;
&lt;p&gt;템플릿은 페이지만들때 쓰는거라서 넘어감 &lt;/p&gt;
&lt;p&gt;wsgi_application 은 웹서비스할 때 필요한 것.&lt;/p&gt;
&lt;p&gt;databases는 데이터베이스 내가 뭐쓸지 뭘로 관리할지.&lt;/p&gt;
&lt;p&gt;auth&lt;em&gt;password&lt;/em&gt;validators&lt;/p&gt;
&lt;p&gt;비밀번호 체크하는 검사하는 기준들 . 우리는 사용안함. 할꺼면 따로 만들고.&lt;/p&gt;
&lt;p&gt;Use_tz - false하면 내 컴퓨터시간으로 됨.&lt;/p&gt;
&lt;h3 id=&quot;vim-단축키&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#vim-%EB%8B%A8%EC%B6%95%ED%82%A4&quot; aria-label=&quot;vim 단축키 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim 단축키&lt;/h3&gt;
&lt;p&gt;+dd 는 그라인 삭제&lt;/p&gt;
&lt;p&gt;+yy는 그라인 복사&lt;/p&gt;
&lt;p&gt;+p는 붙여넣기&lt;/p&gt;
&lt;p&gt;+u는 undo&lt;/p&gt;
&lt;p&gt;+cc는 오려두기&lt;/p&gt;
&lt;h3 id=&quot;쟝고-서버가동-방법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9F%9D%EA%B3%A0-%EC%84%9C%EB%B2%84%EA%B0%80%EB%8F%99-%EB%B0%A9%EB%B2%95&quot; aria-label=&quot;쟝고 서버가동 방법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;쟝고 서버가동 방법&lt;/h3&gt;
&lt;p&gt;python manage.py runserver&lt;/p&gt;
&lt;p&gt;런서버는 데이터베이스없으며 ㄴ안됨&lt;/p&gt;
&lt;p&gt;내컴퓨터를 가르키는 localhost or  127.0.0.1&lt;/p&gt;
&lt;p&gt;DNS&lt;/p&gt;
&lt;p&gt;도메인네임을 ip로 바꾸는 시스템.&lt;/p&gt;
&lt;figure&gt;
	&lt;blockquote&gt;
		&lt;p&gt;
			세상에 내 주머니에 돈꼽아주려는 사람은 없다.
		&lt;/p&gt;
		&lt;footer&gt;
			&lt;cite&gt;- Misuk Lee.&lt;/cite&gt;
		&lt;/footer&gt;
	&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[TIL-쟝고 튜토리얼 탐험기02(Explore Django tutorial02)-장고 설계 철학,  Polls.app 만들기]]></title><description><![CDATA[웹서비스를 만들기 쉽게 도와주는 우리의 장고!! 친숙해지자]]></description><link>http://guseowhtjs1231.github.io//posts/exploring-the-django-tutorial</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/exploring-the-django-tutorial</guid><pubDate>Fri, 01 May 2020 15:30:03 GMT</pubDate><content:encoded>&lt;p&gt;쟝고 접한지 두번째 날이다. 화이팅&lt;/p&gt;
&lt;h2 id=&quot;먼저-장고의-설계-철학을-먼저-짚고-가자&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A8%BC%EC%A0%80-%EC%9E%A5%EA%B3%A0%EC%9D%98-%EC%84%A4%EA%B3%84-%EC%B2%A0%ED%95%99%EC%9D%84-%EB%A8%BC%EC%A0%80-%EC%A7%9A%EA%B3%A0-%EA%B0%80%EC%9E%90&quot; aria-label=&quot;먼저 장고의 설계 철학을 먼저 짚고 가자 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;먼저 장고의 설계 철학을 먼저 짚고 가자.&lt;/h2&gt;
&lt;h3 id=&quot;일반&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%BC%EB%B0%98&quot; aria-label=&quot;일반 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;일반&lt;/h3&gt;
&lt;p&gt;느슨한 결합 - 느슨한 결합, 탄탄한 응집 : 프레임워크의 각 계층은 정말로 서로 필요하기 전까지는 서로 “알지 못해야” 한다.&lt;/p&gt;
&lt;p&gt;적은 코드 - 틀에 박힌 코드 배제 최소한의 코드 활용 , 파이썬의 동적 기능을 최대로 활용&lt;/p&gt;
&lt;p&gt;신속한 개발 - 빠른 웹개발 추구&lt;/p&gt;
&lt;p&gt;반복하지 말 것 - 중복성은 나쁜 것 , 정규화는 좋은 것 : 최소한의 것들로 최대한의 것을 만든다.&lt;/p&gt;
&lt;p&gt;명시적인 것이 묵시적인 것보다 낫다.&lt;/p&gt;
&lt;p&gt;일관성&lt;/p&gt;
&lt;h3 id=&quot;모델&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AA%A8%EB%8D%B8&quot; aria-label=&quot;모델 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;모델&lt;/h3&gt;
&lt;p&gt;명시적인 것이 묵시적인 것보다 낫다.&lt;/p&gt;
&lt;p&gt;모든 관련 도메인 로직을 포함하라 - 모델을 이해하는 데 요구되는 모든 정보가 모델 내에 있어야 한다.&lt;/p&gt;
&lt;h3 id=&quot;데이터베이스-api&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-api&quot; aria-label=&quot;데이터베이스 api permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터베이스 API&lt;/h3&gt;
&lt;p&gt;SQL 효율성&lt;/p&gt;
&lt;p&gt;간결하고 강력한 구문&lt;/p&gt;
&lt;p&gt;필요할 경우 SQL 문을 직접 장석하기 쉬워야 함.&lt;/p&gt;
&lt;h3 id=&quot;url-설계&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#url-%EC%84%A4%EA%B3%84&quot; aria-label=&quot;url 설계 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;URL 설계&lt;/h3&gt;
&lt;p&gt;느슨한 결합&lt;/p&gt;
&lt;p&gt;무한한 유연성&lt;/p&gt;
&lt;p&gt;모범 사례를 장려&lt;/p&gt;
&lt;p&gt;명확한 URL&lt;/p&gt;
&lt;h3 id=&quot;템플릿-시스템&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%8B%9C%EC%8A%A4%ED%85%9C&quot; aria-label=&quot;템플릿 시스템 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;템플릿 시스템&lt;/h3&gt;
&lt;p&gt;표현과 로직을 분리&lt;/p&gt;
&lt;p&gt;중복을 배제&lt;/p&gt;
&lt;p&gt;HTML과의 분리&lt;/p&gt;
&lt;p&gt;XML을 템플릿 언어로 사용하지 말 것&lt;/p&gt;
&lt;p&gt;디자이너가 코딩 능력이 있는 것으로 가정&lt;/p&gt;
&lt;p&gt;공백에 특별한 의미를 부여하지 말 것&lt;/p&gt;
&lt;p&gt;프로그래밍 언어를 발명하지 말 것&lt;/p&gt;
&lt;p&gt;안전과 보안&lt;/p&gt;
&lt;p&gt;확장성&lt;/p&gt;
&lt;h3 id=&quot;뷰&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B7%B0&quot; aria-label=&quot;뷰 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;뷰&lt;/h3&gt;
&lt;p&gt;단순성&lt;/p&gt;
&lt;p&gt;요청 객체의 사용&lt;/p&gt;
&lt;p&gt;느슨한 결합&lt;/p&gt;
&lt;p&gt;GET 과 POST를 구분&lt;/p&gt;
&lt;h3 id=&quot;캐시-프레임워크&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BA%90%EC%8B%9C-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC&quot; aria-label=&quot;캐시 프레임워크 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;캐시 프레임워크&lt;/h3&gt;
&lt;p&gt;적은 코드 &lt;/p&gt;
&lt;p&gt;일관성&lt;/p&gt;
&lt;p&gt;확장성&lt;/p&gt;
&lt;h2 id=&quot;database-setup&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#database-setup&quot; aria-label=&quot;database setup permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database setup&lt;/h2&gt;
&lt;p&gt;mysite/settings.py를 열고 쟝고 세팅을 해볼 수 있다.&lt;/p&gt;
&lt;p&gt;기본적으로 SQLite를 데이터베이스로 쓰는데 확장가능한 데이터베이스(PostgreSQL같은)것을 쓰고 싶다면 바꿀 수 있다.
DATABASES ‘default’에서 ENGIN을 바꾸고 NAME도 바꾸면 된다. 원하는 걸로.&lt;/p&gt;
&lt;p&gt;예로,&lt;/p&gt;
&lt;p&gt;django.db.backends.sqlite3&lt;/p&gt;
&lt;p&gt;django.db.backends.postgresql&lt;/p&gt;
&lt;p&gt;django.db.backends.mysql&lt;/p&gt;
&lt;p&gt;django.db.backends.oracle&lt;/p&gt;
&lt;p&gt;등등&lt;/p&gt;
&lt;p&gt;name - 나의 데이터베이스 이름. 절대경로로 할때 취급 될 이름. 기본값은 &lt;/p&gt;
&lt;p&gt;os.path.join(BASE_DIR, ‘db.sqlite3’) 이다.&lt;/p&gt;
&lt;p&gt;SQLite안쓰고 다른 데이터베이스를 쓰려면 일단 처음부터 고치고 가야하는데&lt;/p&gt;
&lt;p&gt;CREATE DATABASE database_name; 치고 하면 된다. 나는 기본값으로 쓸 것이기 때문에 패스한다.&lt;/p&gt;
&lt;p&gt;mysite/settings.py 에서 TIME_ZONE을 내가 지금 있는 타임존으로 설정해야한다.&lt;/p&gt;
&lt;p&gt;mysite/settings.py에서 INSTALLED_APPS의 기본값 의미.&lt;/p&gt;
&lt;p&gt;django.contrib.admin – The admin site. You’ll use it shortly.
django.contrib.auth – An authentication system.
django.contrib.contenttypes – A framework for content types.
django.contrib.sessions – A session framework.
django.contrib.messages – A messaging framework.
django.contrib.staticfiles – A framework for managing static files.
최소 하나의 데이터베이스 테이블을 응용프로그램들이 쓸 것이기 때문에 테이블을 작성해야한다. 그러기 전에 쳐야할 명령어&lt;/p&gt;
&lt;p&gt;$ python manage.py migrate&lt;/p&gt;
&lt;p&gt;이주 시키는 명령같은데.&lt;/p&gt;
&lt;p&gt;migrate 명령어는 setting.py안에 INSTALLED_APPS 세팅을 확인하고 데이터베이스 세팅되어 있는 것에 따라 필요한 데이터베이스 테이블을 만든다.  &lt;/p&gt;
&lt;p&gt;python manage.py migrate 실행 결과
각 이주들이 어플라이 되었다고 나온다.&lt;/p&gt;
&lt;p&gt;The migrate command will only run migrations for apps in INSTALLED_APPS.&lt;/p&gt;
&lt;p&gt;: migrate 명령어는 오직 INSTALLED_APPS의 앱들을 이주하기 위해 사용된다.&lt;/p&gt;
&lt;p&gt;두가지의 모델 (질문 과 선택)을 만들어야 되는데 질문은 공식 날짜를 가지고 있고 선택은 두가지의 필드를 가지고 있다. 하나는 글자로된 선택지이고 하나는 투표집계이다. 각 선택은 질문과 연관되어 있다.&lt;/p&gt;
&lt;p&gt;이러한 개념은 파이썬으로 표현되는데  polls/models.py을 편집해보자.&lt;/p&gt;
&lt;p&gt;polls/models.py&lt;/p&gt;
&lt;p&gt;class Question(models.Model):
question&lt;em&gt;text = models.CharField(max&lt;/em&gt;length=200)
pub_date = models.DateTimeField(‘date published’)&lt;/p&gt;
&lt;p&gt;class Choice(models.Model):
question = models.ForeignKey(Question, on&lt;em&gt;delete=models.CASCADE)
choice&lt;/em&gt;text = models.Charfield(max_length=200)
votes = models.IntergerField(default=0)&lt;/p&gt;
&lt;p&gt;이러한 각 모델들은 클래스로 인해 표현되는데 django.db.models.Model 의 subclasses이다. 각 모델은 클래스변수의 숫자를 가지는데 각 모델의 데이터베이스 필드를 나타낸다.&lt;/p&gt;
&lt;p&gt;데이터베이스의 각 필드는 클래스의 인스턴스로 표현된다. &lt;/p&gt;
&lt;p&gt;CharField 는 문자(Character)필드를, DateTimeField는 날짜와 시간(datetime)필드를 표현함. 이것은 각 필드가 어떤 자료형을 가질 수 있는지를 Django에게 말한다.&lt;/p&gt;
&lt;p&gt;각자의 Field 인스턴스의 이름(question&lt;em&gt;text or pub&lt;/em&gt;date)은 기계가 읽기 좋은 형식(machine-friendly format)의 데이터베이스 필드 이름이다. 이 필드명은 파이썬 코드에서 사용할 수 있으며 데이터베이스는 컬럼명으로 사용할 것이다.&lt;/p&gt;
&lt;p&gt;Field클래스의 생성자에 선택적인 첫번째 위치 인수를 전다랗여 사람이 읽기 좋은(human-readable)이름을 지정할 수도 있다.&lt;/p&gt;
&lt;p&gt;기계가 읽기 좋은 형태의 이름이라도 사람이 읽기에는 충분하다.&lt;/p&gt;
&lt;p&gt;몇몇 Field클래스들은 필수 인수가 필요하다. 예를 들어 Charfield의 경우 max_length를 입력해주어야 한다.  그리고 Field는 다양한 선택적 인수들을 가질 수 있다. 여기 예제에서는 default로 하여금 votes의 기본값을 0으로 선택하였다. &lt;/p&gt;
&lt;p&gt;그리고 ForeignKey를 사용한 관계설정이 있는데, 각각의 Choice가 하나의 Question에 관계된다는 것을 Django에 알려줌. Django는 다-대-일(many-to-one), 다대다(many-to-many), 일대일(One-to-one)과 같은 모든 일반 데이터베이스의 관계를 지원함.&lt;/p&gt;
&lt;h2 id=&quot;모델의-활성화&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AA%A8%EB%8D%B8%EC%9D%98-%ED%99%9C%EC%84%B1%ED%99%94&quot; aria-label=&quot;모델의 활성화 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;모델의 활성화&lt;/h2&gt;
&lt;p&gt;모델에 대한 이 소량의 코드(아까적은 파이썬)가 , Django에게 상당한 양의 정보를 전달함.&lt;/p&gt;
&lt;p&gt;Django가 그 정보를 받아 하는 일&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이 앱을 위한 데이터베이스 스키마 생성(Create table문)&lt;/li&gt;
&lt;li&gt;Question과 Choice 객체에 접근하기 위한 Python 데이터베이스 접근 API를 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그러나 지금 가장 먼저 해야할 일은 프로젝트에게 Polls앱이 설치되어 있다는 것을 알려야 함.&lt;/p&gt;
&lt;p&gt;장고의 앱들은 분리되어 있어서 꼈다 뺐다를 할 수 있다. &lt;/p&gt;
&lt;p&gt;앱을 현재의 프로젝트에 포함시키기 위해서는 mysite/settings.py 파일 속에 installed_app에 &lt;/p&gt;
&lt;p&gt;‘polls.apps.PollsConfig’를 추가 해야 한다.&lt;/p&gt;
&lt;p&gt;이렇게 하면 Django가 polls앱이 포함 된 것을 알게 된다. &lt;/p&gt;
&lt;p&gt;$python manage.py makemigrations polls
makemigrations를 실행시킴으로써, 우리가 모델을 새로만든 사실과 이 사실을 migration에 저장시키고 싶다는 것을 django에게 알린 것이다. &lt;/p&gt;
&lt;p&gt;마이그레이션(Migration)은  모델 및 데이터베이스의 스키마에 대한 변경사항을 저장하는 방법이다. 원한다면 새로운 모델 마이그레이션을 읽을 수 있다.&lt;/p&gt;
&lt;p&gt;migrate : 우리를 위해 migration들을 실행시켜주고 자동으로 데이터베이스 스키마를 관리해주는 명령어&lt;/p&gt;
&lt;p&gt;sqlmigrate : migration이름을 인수로 받아 실행하는 SQL 문장을 보여줌.&lt;/p&gt;
&lt;p&gt;$ python manage.py sqlmigrate polls 0001&lt;/p&gt;
&lt;p&gt;python manage.py sqlmigrate polls 0001의 결과화면
지금 껏 알아본 모델 변경을 만드는데 세단계 지침은 다음과 같다.&lt;/p&gt;
&lt;p&gt;(  models.py에서) 모델을 변경한다.
Python manage.py makemigrations 를 통해 이 변경사항에 대한 마이그레이션을 만든다.
python manage.py migrate명령을 통해 변경사항을 데이터베이스에 적용한다.
API 가지고 놀기&lt;/p&gt;
&lt;p&gt;$python manage.py shell&lt;/p&gt;
&lt;p&gt;DJANGO&lt;em&gt;SETTINGS&lt;/em&gt;MODULE환경변수 때문에 python이라고 치지 않고 위의 명령대로 실행했다. 이렇게 입장을 하고 이것저것 쳐보면 Django에서 동작하는 모든 명령을 대화식 Python 쉘에서 그대로 시험 해 볼 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from polls.models import Choice, Question&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Question.objects.all()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;QuerySet []&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from django.utils import timezone&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;q = Question(question&lt;em&gt;text=“What’s new?”, pub&lt;/em&gt;date=timezone.now())&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;q.save()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;q.id&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;q.question_text&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;“What’s new?”&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;q.pub_date&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;datetime.datetime(2020, 5, 1, 2, 46, 51, 523795, tzinfo=)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;q.question_text = “What’s up?”
q.save()
Question.objects.all()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x3C;QuerySet [Question: Question object(1)]&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;exit()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x3C;QuerySet [Question: Question object(1)]&gt;은 이 객체를 표현하는 데 별로 도움이 되지 않는다. (polls/models.py파일의)Question모델을 수정하여, &lt;strong&gt;str&lt;/strong&gt;()메소드를 Question과 Choice에 추가하면 도움이 된다.&lt;/p&gt;
&lt;p&gt;polls/models.py&lt;/p&gt;
&lt;p&gt;from django.db import models&lt;/p&gt;
&lt;p&gt;class Question(models.Model):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  def __str__(self):

        return self.question_text&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;class Choice(models.Model):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  def __str__(self):

        return self.choice_text&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;우리의 모델에 &lt;strong&gt;str&lt;/strong&gt;()메소드를 추가하는 것은 객체의 표현을 대화식 프롬프트에서 편하게 보려는 이유 말고도, Django가 자동으로 생성하는 관리 사이트에서도 객체의 표현이 사용되기 때문이다.&lt;/p&gt;
&lt;p&gt;또 모델에 커스텀 메소드를 하나 추가해본다.&lt;/p&gt;
&lt;p&gt;polls/models.py&lt;/p&gt;
&lt;p&gt;import datetime&lt;/p&gt;
&lt;p&gt;from django.db import models&lt;/p&gt;
&lt;p&gt;from django.utils import timezone&lt;/p&gt;
&lt;p&gt;class Question(models.Model):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  def was_published_recently(self):

        return self.pub_date &amp;gt;= timezone.now() - datetime.timedelta(days=1)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;import datetime은 Python 의 표준 모듈인 datetime모듈을 참조하기 위해&lt;/p&gt;
&lt;p&gt;from django.utils import timezone은 Django의 시간대 관련 유틸리티인 django.utils.timezone을 참조하기 위해 추가 한 것이다.&lt;/p&gt;
&lt;p&gt;다시 &lt;/p&gt;
&lt;p&gt;$python manage.py shell&lt;/p&gt;
&lt;p&gt;을 하고 API에서 놀아보자&lt;/p&gt;
&lt;p&gt;API에서 이것저것 실험&lt;/p&gt;
&lt;h2 id=&quot;관리자-생성하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0&quot; aria-label=&quot;관리자 생성하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;관리자 생성하기&lt;/h2&gt;
&lt;p&gt;$python manage.py createsuperuser&lt;/p&gt;
&lt;p&gt;이렇게 하면&lt;/p&gt;
&lt;p&gt;username과 Email address와 Password를 2번 묻는다. 다 입력을 하면 슈퍼유저 계정이 생긴다.&lt;/p&gt;
&lt;h2 id=&quot;개발-서버-시작&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84-%EC%8B%9C%EC%9E%91&quot; aria-label=&quot;개발 서버 시작 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;개발 서버 시작&lt;/h2&gt;
&lt;p&gt;$python manage.py runserver&lt;/p&gt;
&lt;p&gt;한 다음 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:8000/admin/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;http://127.0.0.1:8000/admin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 으로 접근하면 유저네임과 비밀번호를 입력하라고 한다.&lt;/p&gt;
&lt;h2 id=&quot;관리자-사이트에-들어가기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%82%AC%EC%9D%B4%ED%8A%B8%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0&quot; aria-label=&quot;관리자 사이트에 들어가기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;관리자 사이트에 들어가기&lt;/h2&gt;
&lt;p&gt;앞에서 생성한 슈퍼유저계정으로 로그인을 하면 Django관리 인덱스 페이지가 보인다.&lt;/p&gt;
&lt;p&gt;편집 가능한 그룹과 사용자와 같은 몇 종류의 컨텐츠를 볼 수 있다. 이것들은 django.contrib.auth 모듈에서 제공되는데 , Django에서 제공되는 인증 프레임 워크이다.&lt;/p&gt;
&lt;p&gt;관리사이트에서 poll app을 변경가능하도록 만들기&lt;/p&gt;
&lt;p&gt;polls/admin.py&lt;/p&gt;
&lt;p&gt;from django.contrib import admin&lt;/p&gt;
&lt;p&gt;from .models import Question&lt;/p&gt;
&lt;p&gt;admin.site.register(Question)&lt;/p&gt;
&lt;p&gt;이제 polls Questions가 생겼다. 들어가보면 수정도 가능하고 히스토리도 볼 수 있다.!!&lt;/p&gt;
&lt;p&gt;이로써 튜토리얼 2장이 끝났다. &lt;/p&gt;
&lt;figure&gt;
	&lt;blockquote&gt;
		&lt;p&gt;
		 	특별한 것이 넘쳐나는 곳에선 특별하지 않는 것이 특별한 것이다.
		&lt;/p&gt;
		&lt;footer&gt;
			&lt;cite&gt;Youngbin Ha&lt;/cite&gt;
		&lt;/footer&gt;
	&lt;/blockquote&gt;
&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Perfect day to be perfect]]></title><description><![CDATA[아름 다운 이강산을 지키는 우리 사나이 기백으로 오늘을 산다. ]]></description><link>http://guseowhtjs1231.github.io//posts/perfecting-the-art-of-perfection</link><guid isPermaLink="false">http://guseowhtjs1231.github.io//posts/perfecting-the-art-of-perfection</guid><pubDate>Thu, 30 Apr 2020 23:46:37 GMT</pubDate><content:encoded></content:encoded></item></channel></rss>